{"ast":null,"code":"import { sub } from 'date-fns'; //\n\nimport { role } from './role';\nimport { email } from './email';\nimport { boolean } from './boolean';\nimport { company } from './company';\nimport { phoneNumber } from './phoneNumber';\nimport { fullAddress, country } from './address';\nimport { firstName, lastName, fullName } from './name';\nimport { title, sentence, description } from './text';\nimport { price, rating, age, percent } from './number'; // ----------------------------------------------------------------------\n\nconst mockData = {\n  id: index => `e99f09a7-dd88-49d5-b1c8-1daf80c2d7b${index + 1}`,\n  email: index => email[index],\n  phoneNumber: index => phoneNumber[index],\n  time: index => sub(new Date(), {\n    days: index,\n    hours: index\n  }),\n  boolean: index => boolean[index],\n  role: index => role[index],\n  company: index => company[index],\n  address: {\n    fullAddress: index => fullAddress[index],\n    country: index => country[index]\n  },\n  name: {\n    firstName: index => firstName[index],\n    lastName: index => lastName[index],\n    fullName: index => fullName[index]\n  },\n  text: {\n    title: index => title[index],\n    sentence: index => sentence[index],\n    description: index => description[index]\n  },\n  number: {\n    percent: index => percent[index],\n    rating: index => rating[index],\n    age: index => age[index],\n    price: index => price[index]\n  },\n  image: {\n    cover: index => `/static/mock-images/covers/cover_${index + 1}.jpg`,\n    feed: index => `/static/mock-images/feeds/feed_${index + 1}.jpg`,\n    product: index => `/static/mock-images/products/product_${index + 1}.jpg`,\n    avatar: index => `/static/mock-images/avatars/avatar_${index + 1}.jpg`\n  }\n};\nexport default mockData;","map":{"version":3,"names":["sub","role","email","boolean","company","phoneNumber","fullAddress","country","firstName","lastName","fullName","title","sentence","description","price","rating","age","percent","mockData","id","index","time","Date","days","hours","address","name","text","number","image","cover","feed","product","avatar"],"sources":["D:/Softwares/react-simple-minimal/src/utils/mock-data/index.js"],"sourcesContent":["import { sub } from 'date-fns';\n//\nimport { role } from './role';\nimport { email } from './email';\nimport { boolean } from './boolean';\nimport { company } from './company';\nimport { phoneNumber } from './phoneNumber';\nimport { fullAddress, country } from './address';\nimport { firstName, lastName, fullName } from './name';\nimport { title, sentence, description } from './text';\nimport { price, rating, age, percent } from './number';\n\n// ----------------------------------------------------------------------\n\nconst mockData = {\n  id: (index) => `e99f09a7-dd88-49d5-b1c8-1daf80c2d7b${index + 1}`,\n  email: (index) => email[index],\n  phoneNumber: (index) => phoneNumber[index],\n  time: (index) => sub(new Date(), { days: index, hours: index }),\n  boolean: (index) => boolean[index],\n  role: (index) => role[index],\n  company: (index) => company[index],\n  address: {\n    fullAddress: (index) => fullAddress[index],\n    country: (index) => country[index]\n  },\n  name: {\n    firstName: (index) => firstName[index],\n    lastName: (index) => lastName[index],\n    fullName: (index) => fullName[index]\n  },\n  text: {\n    title: (index) => title[index],\n    sentence: (index) => sentence[index],\n    description: (index) => description[index]\n  },\n  number: {\n    percent: (index) => percent[index],\n    rating: (index) => rating[index],\n    age: (index) => age[index],\n    price: (index) => price[index]\n  },\n  image: {\n    cover: (index) => `/static/mock-images/covers/cover_${index + 1}.jpg`,\n    feed: (index) => `/static/mock-images/feeds/feed_${index + 1}.jpg`,\n    product: (index) => `/static/mock-images/products/product_${index + 1}.jpg`,\n    avatar: (index) => `/static/mock-images/avatars/avatar_${index + 1}.jpg`\n  }\n};\n\nexport default mockData;\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,UAApB,C,CACA;;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,WAArC;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,QAA9B,QAA8C,QAA9C;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,QAA7C;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,GAAxB,EAA6BC,OAA7B,QAA4C,UAA5C,C,CAEA;;AAEA,MAAMC,QAAQ,GAAG;EACfC,EAAE,EAAGC,KAAD,IAAY,sCAAqCA,KAAK,GAAG,CAAE,EADhD;EAEflB,KAAK,EAAGkB,KAAD,IAAWlB,KAAK,CAACkB,KAAD,CAFR;EAGff,WAAW,EAAGe,KAAD,IAAWf,WAAW,CAACe,KAAD,CAHpB;EAIfC,IAAI,EAAGD,KAAD,IAAWpB,GAAG,CAAC,IAAIsB,IAAJ,EAAD,EAAa;IAAEC,IAAI,EAAEH,KAAR;IAAeI,KAAK,EAAEJ;EAAtB,CAAb,CAJL;EAKfjB,OAAO,EAAGiB,KAAD,IAAWjB,OAAO,CAACiB,KAAD,CALZ;EAMfnB,IAAI,EAAGmB,KAAD,IAAWnB,IAAI,CAACmB,KAAD,CANN;EAOfhB,OAAO,EAAGgB,KAAD,IAAWhB,OAAO,CAACgB,KAAD,CAPZ;EAQfK,OAAO,EAAE;IACPnB,WAAW,EAAGc,KAAD,IAAWd,WAAW,CAACc,KAAD,CAD5B;IAEPb,OAAO,EAAGa,KAAD,IAAWb,OAAO,CAACa,KAAD;EAFpB,CARM;EAYfM,IAAI,EAAE;IACJlB,SAAS,EAAGY,KAAD,IAAWZ,SAAS,CAACY,KAAD,CAD3B;IAEJX,QAAQ,EAAGW,KAAD,IAAWX,QAAQ,CAACW,KAAD,CAFzB;IAGJV,QAAQ,EAAGU,KAAD,IAAWV,QAAQ,CAACU,KAAD;EAHzB,CAZS;EAiBfO,IAAI,EAAE;IACJhB,KAAK,EAAGS,KAAD,IAAWT,KAAK,CAACS,KAAD,CADnB;IAEJR,QAAQ,EAAGQ,KAAD,IAAWR,QAAQ,CAACQ,KAAD,CAFzB;IAGJP,WAAW,EAAGO,KAAD,IAAWP,WAAW,CAACO,KAAD;EAH/B,CAjBS;EAsBfQ,MAAM,EAAE;IACNX,OAAO,EAAGG,KAAD,IAAWH,OAAO,CAACG,KAAD,CADrB;IAENL,MAAM,EAAGK,KAAD,IAAWL,MAAM,CAACK,KAAD,CAFnB;IAGNJ,GAAG,EAAGI,KAAD,IAAWJ,GAAG,CAACI,KAAD,CAHb;IAINN,KAAK,EAAGM,KAAD,IAAWN,KAAK,CAACM,KAAD;EAJjB,CAtBO;EA4BfS,KAAK,EAAE;IACLC,KAAK,EAAGV,KAAD,IAAY,oCAAmCA,KAAK,GAAG,CAAE,MAD3D;IAELW,IAAI,EAAGX,KAAD,IAAY,kCAAiCA,KAAK,GAAG,CAAE,MAFxD;IAGLY,OAAO,EAAGZ,KAAD,IAAY,wCAAuCA,KAAK,GAAG,CAAE,MAHjE;IAILa,MAAM,EAAGb,KAAD,IAAY,sCAAqCA,KAAK,GAAG,CAAE;EAJ9D;AA5BQ,CAAjB;AAoCA,eAAeF,QAAf"},"metadata":{},"sourceType":"module"}