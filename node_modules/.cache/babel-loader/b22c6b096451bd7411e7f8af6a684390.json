{"ast":null,"code":"import React from 'react';\n\nfunction createCommonjsModule(fn) {\n  var module = {\n    exports: {}\n  };\n  return fn(module, module.exports), module.exports;\n}\n\nvar icon = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.fullIcon = exports.iconDefaults = exports.minifyProps = exports.matchName = void 0;\n  /**\n   * Expression to test part of icon name.\n   */\n\n  exports.matchName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\n  /**\n   * Properties that can be minified\n   *\n   * Values of all these properties are awalys numbers\n   */\n\n  exports.minifyProps = [// All IconifyDimenisons properties\n  'width', 'height', 'top', 'left'];\n  /**\n   * Default values for all optional IconifyIcon properties\n   */\n\n  exports.iconDefaults = Object.freeze({\n    left: 0,\n    top: 0,\n    width: 16,\n    height: 16,\n    rotate: 0,\n    vFlip: false,\n    hFlip: false\n  });\n  /**\n   * Add optional properties to icon\n   */\n\n  function fullIcon(data) {\n    return { ...exports.iconDefaults,\n      ...data\n    };\n  }\n\n  exports.fullIcon = fullIcon;\n});\nvar name = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.validateIcon = exports.stringToIcon = void 0;\n  /**\n   * Convert string to Icon object.\n   */\n\n  const stringToIcon = (value, validate, allowSimpleName, provider = '') => {\n    const colonSeparated = value.split(':'); // Check for provider with correct '@' at start\n\n    if (value.slice(0, 1) === '@') {\n      // First part is provider\n      if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n        // \"@provider:prefix:name\" or \"@provider:prefix-name\"\n        return null;\n      }\n\n      provider = colonSeparated.shift().slice(1);\n    } // Check split by colon: \"prefix:name\", \"provider:prefix:name\"\n\n\n    if (colonSeparated.length > 3 || !colonSeparated.length) {\n      return null;\n    }\n\n    if (colonSeparated.length > 1) {\n      // \"prefix:name\"\n      const name = colonSeparated.pop();\n      const prefix = colonSeparated.pop();\n      const result = {\n        // Allow provider without '@': \"provider:prefix:name\"\n        provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n        prefix,\n        name\n      };\n      return validate && !exports.validateIcon(result) ? null : result;\n    } // Attempt to split by dash: \"prefix-name\"\n\n\n    const name = colonSeparated[0];\n    const dashSeparated = name.split('-');\n\n    if (dashSeparated.length > 1) {\n      const result = {\n        provider: provider,\n        prefix: dashSeparated.shift(),\n        name: dashSeparated.join('-')\n      };\n      return validate && !exports.validateIcon(result) ? null : result;\n    } // If allowEmpty is set, allow empty provider and prefix, allowing names like \"home\"\n\n\n    if (allowSimpleName && provider === '') {\n      const result = {\n        provider: provider,\n        prefix: '',\n        name\n      };\n      return validate && !exports.validateIcon(result, allowSimpleName) ? null : result;\n    }\n\n    return null;\n  };\n\n  exports.stringToIcon = stringToIcon;\n  /**\n   * Check if icon is valid.\n   *\n   * This function is not part of stringToIcon because validation is not needed for most code.\n   */\n\n  const validateIcon = (icon$1, allowSimpleName) => {\n    if (!icon$1) {\n      return false;\n    }\n\n    return !!((icon$1.provider === '' || icon$1.provider.match(icon.matchName)) && (allowSimpleName && icon$1.prefix === '' || icon$1.prefix.match(icon.matchName)) && icon$1.name.match(icon.matchName));\n  };\n\n  exports.validateIcon = validateIcon;\n});\nvar merge = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.mergeIconData = void 0;\n  /**\n   * Merge icon and alias\n   */\n\n  function mergeIconData(icon$1, alias) {\n    const result = { ...icon$1\n    };\n\n    for (const key in icon.iconDefaults) {\n      const prop = key;\n\n      if (alias[prop] !== void 0) {\n        const value = alias[prop];\n\n        if (result[prop] === void 0) {\n          // Missing value\n          result[prop] = value;\n          continue;\n        }\n\n        switch (prop) {\n          case 'rotate':\n            result[prop] = (result[prop] + value) % 4;\n            break;\n\n          case 'hFlip':\n          case 'vFlip':\n            result[prop] = value !== result[prop];\n            break;\n\n          default:\n            // Overwrite value\n            result[prop] = value;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  exports.mergeIconData = mergeIconData;\n});\nvar parse = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.parseIconSet = void 0;\n  /**\n   * Get list of defaults keys\n   */\n\n  const defaultsKeys = Object.keys(icon.iconDefaults);\n  /**\n   * Resolve alias\n   */\n\n  function resolveAlias(alias, icons, aliases, level = 0) {\n    const parent = alias.parent;\n\n    if (icons[parent] !== void 0) {\n      return merge.mergeIconData(icons[parent], alias);\n    }\n\n    if (aliases[parent] !== void 0) {\n      if (level > 2) {\n        // icon + alias + alias + alias = too much nesting, possibly infinite\n        return null;\n      }\n\n      const icon = resolveAlias(aliases[parent], icons, aliases, level + 1);\n\n      if (icon) {\n        return merge.mergeIconData(icon, alias);\n      }\n    }\n\n    return null;\n  }\n  /**\n   * Extract icons from an icon set\n   */\n\n\n  function parseIconSet(data, callback, list = 'none') {\n    const added = []; // Must be an object\n\n    if (typeof data !== 'object') {\n      return list === 'none' ? false : added;\n    } // Check for missing icons list returned by API\n\n\n    if (data.not_found instanceof Array) {\n      data.not_found.forEach(name => {\n        callback(name, null);\n\n        if (list === 'all') {\n          added.push(name);\n        }\n      });\n    } // Must have 'icons' object\n\n\n    if (typeof data.icons !== 'object') {\n      return list === 'none' ? false : added;\n    } // Get default values\n\n\n    const defaults = Object.create(null);\n    defaultsKeys.forEach(key => {\n      if (data[key] !== void 0 && typeof data[key] !== 'object') {\n        defaults[key] = data[key];\n      }\n    }); // Get icons\n\n    const icons = data.icons;\n    Object.keys(icons).forEach(name => {\n      const icon$1 = icons[name];\n\n      if (typeof icon$1.body !== 'string') {\n        return;\n      } // Freeze icon to make sure it will not be modified\n\n\n      callback(name, Object.freeze({ ...icon.iconDefaults,\n        ...defaults,\n        ...icon$1\n      }));\n      added.push(name);\n    }); // Get aliases\n\n    if (typeof data.aliases === 'object') {\n      const aliases = data.aliases;\n      Object.keys(aliases).forEach(name => {\n        const icon$1 = resolveAlias(aliases[name], icons, aliases, 1);\n\n        if (icon$1) {\n          // Freeze icon to make sure it will not be modified\n          callback(name, Object.freeze({ ...icon.iconDefaults,\n            ...defaults,\n            ...icon$1\n          }));\n          added.push(name);\n        }\n      });\n    }\n\n    return list === 'none' ? added.length > 0 : added;\n  }\n\n  exports.parseIconSet = parseIconSet;\n});\nvar storage_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.listIcons = exports.getIcon = exports.iconExists = exports.addIcon = exports.addIconSet = exports.getStorage = exports.newStorage = void 0;\n  /**\n   * Storage by provider and prefix\n   */\n\n  const storage = Object.create(null);\n  /**\n   * Create new storage\n   */\n\n  function newStorage(provider, prefix) {\n    return {\n      provider,\n      prefix,\n      icons: Object.create(null),\n      missing: Object.create(null)\n    };\n  }\n\n  exports.newStorage = newStorage;\n  /**\n   * Get storage for provider and prefix\n   */\n\n  function getStorage(provider, prefix) {\n    if (storage[provider] === void 0) {\n      storage[provider] = Object.create(null);\n    }\n\n    const providerStorage = storage[provider];\n\n    if (providerStorage[prefix] === void 0) {\n      providerStorage[prefix] = newStorage(provider, prefix);\n    }\n\n    return providerStorage[prefix];\n  }\n\n  exports.getStorage = getStorage;\n  /**\n   * Add icon set to storage\n   *\n   * Returns array of added icons if 'list' is true and icons were added successfully\n   */\n\n  function addIconSet(storage, data, list = 'none') {\n    const t = Date.now();\n    return parse.parseIconSet(data, (name, icon) => {\n      if (icon === null) {\n        storage.missing[name] = t;\n      } else {\n        storage.icons[name] = icon;\n      }\n    }, list);\n  }\n\n  exports.addIconSet = addIconSet;\n  /**\n   * Add icon to storage\n   */\n\n  function addIcon(storage, name, icon$1) {\n    try {\n      if (typeof icon$1.body === 'string') {\n        // Freeze icon to make sure it will not be modified\n        storage.icons[name] = Object.freeze(icon.fullIcon(icon$1));\n        return true;\n      }\n    } catch (err) {// Do nothing\n    }\n\n    return false;\n  }\n\n  exports.addIcon = addIcon;\n  /**\n   * Check if icon exists\n   */\n\n  function iconExists(storage, name) {\n    return storage.icons[name] !== void 0;\n  }\n\n  exports.iconExists = iconExists;\n  /**\n   * Get icon data\n   */\n\n  function getIcon(storage, name) {\n    const value = storage.icons[name];\n    return value === void 0 ? null : value;\n  }\n\n  exports.getIcon = getIcon;\n  /**\n   * List available icons\n   */\n\n  function listIcons(provider, prefix) {\n    let allIcons = []; // Get providers\n\n    let providers;\n\n    if (typeof provider === 'string') {\n      providers = [provider];\n    } else {\n      providers = Object.keys(storage);\n    } // Get all icons\n\n\n    providers.forEach(provider => {\n      let prefixes;\n\n      if (typeof provider === 'string' && typeof prefix === 'string') {\n        prefixes = [prefix];\n      } else {\n        prefixes = storage[provider] === void 0 ? [] : Object.keys(storage[provider]);\n      }\n\n      prefixes.forEach(prefix => {\n        const storage = getStorage(provider, prefix);\n        const icons = Object.keys(storage.icons).map(name => (provider !== '' ? '@' + provider + ':' : '') + prefix + ':' + name);\n        allIcons = allIcons.concat(icons);\n      });\n    });\n    return allIcons;\n  }\n\n  exports.listIcons = listIcons;\n});\nvar functions$3 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.storageFunctions = exports.addCollection = exports.addIcon = exports.getIconData = exports.allowSimpleNames = void 0;\n  /**\n   * Allow storing icons without provider or prefix, making it possible to store icons like \"home\"\n   */\n\n  let simpleNames = false;\n\n  function allowSimpleNames(allow) {\n    if (typeof allow === 'boolean') {\n      simpleNames = allow;\n    }\n\n    return simpleNames;\n  }\n\n  exports.allowSimpleNames = allowSimpleNames;\n  /**\n   * Get icon data\n   */\n\n  function getIconData(name$1) {\n    const icon = typeof name$1 === 'string' ? name.stringToIcon(name$1, true, simpleNames) : name$1;\n    return icon ? storage_1.getIcon(storage_1.getStorage(icon.provider, icon.prefix), icon.name) : null;\n  }\n\n  exports.getIconData = getIconData;\n  /**\n   * Add one icon\n   */\n\n  function addIcon(name$1, data) {\n    const icon = name.stringToIcon(name$1, true, simpleNames);\n\n    if (!icon) {\n      return false;\n    }\n\n    const storage = storage_1.getStorage(icon.provider, icon.prefix);\n    return storage_1.addIcon(storage, icon.name, data);\n  }\n\n  exports.addIcon = addIcon;\n  /**\n   * Add icon set\n   */\n\n  function addCollection(data, provider) {\n    if (typeof data !== 'object') {\n      return false;\n    } // Get provider\n\n\n    if (typeof provider !== 'string') {\n      provider = typeof data.provider === 'string' ? data.provider : '';\n    } // Check for simple names: requires empty provider and prefix\n\n\n    if (simpleNames && provider === '' && (typeof data.prefix !== 'string' || data.prefix === '')) {\n      // Simple names: add icons one by one\n      let added = false;\n      parse.parseIconSet(data, (name, icon) => {\n        if (icon !== null && addIcon(name, icon)) {\n          added = true;\n        }\n      });\n      return added;\n    } // Validate provider and prefix\n\n\n    if (typeof data.prefix !== 'string' || !name.validateIcon({\n      provider,\n      prefix: data.prefix,\n      name: 'a'\n    })) {\n      return false;\n    }\n\n    const storage = storage_1.getStorage(provider, data.prefix);\n    return !!storage_1.addIconSet(storage, data);\n  }\n\n  exports.addCollection = addCollection;\n  /**\n   * Export\n   */\n\n  exports.storageFunctions = {\n    // Check if icon exists\n    iconExists: name => getIconData(name) !== null,\n    // Get raw icon data\n    getIcon: name => {\n      const result = getIconData(name);\n      return result ? { ...result\n      } : null;\n    },\n    // List icons\n    listIcons: storage_1.listIcons,\n    // Add icon\n    addIcon,\n    // Add icon set\n    addCollection\n  };\n});\nvar id = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.replaceIDs = void 0;\n  /**\n   * Regular expression for finding ids\n   */\n\n  const regex = /\\sid=\"(\\S+)\"/g;\n  /**\n   * Match for allowed characters before and after id in replacement, including () for group\n   */\n\n  const replaceValue = '([^A-Za-z0-9_-])';\n  /**\n   * Escape value for 'new RegExp()'\n   */\n\n  function escapeRegExp(str) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n  }\n  /**\n   * New random-ish prefix for ids\n   */\n\n\n  const randomPrefix = 'IconifyId-' + Date.now().toString(16) + '-' + (Math.random() * 0x1000000 | 0).toString(16) + '-';\n  /**\n   * Counter for ids, increasing with every replacement\n   */\n\n  let counter = 0;\n  /**\n   * Replace IDs in SVG output with unique IDs\n   * Fast replacement without parsing XML, assuming commonly used patterns and clean XML (icon should have been cleaned up with Iconify Tools or SVGO).\n   */\n\n  function replaceIDs(body, prefix = randomPrefix) {\n    // Find all IDs\n    const ids = [];\n    let match;\n\n    while (match = regex.exec(body)) {\n      ids.push(match[1]);\n    }\n\n    if (!ids.length) {\n      return body;\n    } // Replace with unique ids\n\n\n    ids.forEach(id => {\n      const newID = typeof prefix === 'function' ? prefix() : prefix + counter++;\n      body = body.replace(new RegExp(replaceValue + '(' + escapeRegExp(id) + ')' + replaceValue, 'g'), '$1' + newID + '$3');\n    });\n    return body;\n  }\n\n  exports.replaceIDs = replaceIDs;\n});\nvar size = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.calculateSize = void 0;\n  /**\n   * Regular expressions for calculating dimensions\n   */\n\n  const unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\n  const unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\n  /**\n   * Calculate second dimension when only 1 dimension is set\n   *\n   * @param {string|number} size One dimension (such as width)\n   * @param {number} ratio Width/height ratio.\n   *      If size is width, ratio = height/width\n   *      If size is height, ratio = width/height\n   * @param {number} [precision] Floating number precision in result to minimize output. Default = 2\n   * @return {string|number} Another dimension\n   */\n\n  function calculateSize(size, ratio, precision) {\n    if (ratio === 1) {\n      return size;\n    }\n\n    precision = precision === void 0 ? 100 : precision;\n\n    if (typeof size === 'number') {\n      return Math.ceil(size * ratio * precision) / precision;\n    }\n\n    if (typeof size !== 'string') {\n      return size;\n    } // Split code into sets of strings and numbers\n\n\n    const oldParts = size.split(unitsSplit);\n\n    if (oldParts === null || !oldParts.length) {\n      return size;\n    }\n\n    const newParts = [];\n    let code = oldParts.shift();\n    let isNumber = unitsTest.test(code); // eslint-disable-next-line no-constant-condition\n\n    while (true) {\n      if (isNumber) {\n        const num = parseFloat(code);\n\n        if (isNaN(num)) {\n          newParts.push(code);\n        } else {\n          newParts.push(Math.ceil(num * ratio * precision) / precision);\n        }\n      } else {\n        newParts.push(code);\n      } // next\n\n\n      code = oldParts.shift();\n\n      if (code === void 0) {\n        return newParts.join('');\n      }\n\n      isNumber = !isNumber;\n    }\n  }\n\n  exports.calculateSize = calculateSize;\n});\nvar customisations = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.mergeCustomisations = exports.defaults = void 0;\n  /**\n   * Default icon customisations values\n   */\n\n  exports.defaults = Object.freeze({\n    // Display mode\n    inline: false,\n    // Dimensions\n    width: null,\n    height: null,\n    // Alignment\n    hAlign: 'center',\n    vAlign: 'middle',\n    slice: false,\n    // Transformations\n    hFlip: false,\n    vFlip: false,\n    rotate: 0\n  });\n  /**\n   * Convert IconifyIconCustomisations to FullIconCustomisations\n   */\n\n  function mergeCustomisations(defaults, item) {\n    const result = {};\n\n    for (const key in defaults) {\n      const attr = key; // Copy old value\n\n      result[attr] = defaults[attr];\n\n      if (item[attr] === void 0) {\n        continue;\n      } // Validate new value\n\n\n      const value = item[attr];\n\n      switch (attr) {\n        // Boolean attributes that override old value\n        case 'inline':\n        case 'slice':\n          if (typeof value === 'boolean') {\n            result[attr] = value;\n          }\n\n          break;\n        // Boolean attributes that are merged\n\n        case 'hFlip':\n        case 'vFlip':\n          if (value === true) {\n            result[attr] = !result[attr];\n          }\n\n          break;\n        // Non-empty string\n\n        case 'hAlign':\n        case 'vAlign':\n          if (typeof value === 'string' && value !== '') {\n            result[attr] = value;\n          }\n\n          break;\n        // Non-empty string / non-zero number / null\n\n        case 'width':\n        case 'height':\n          if (typeof value === 'string' && value !== '' || typeof value === 'number' && value || value === null) {\n            result[attr] = value;\n          }\n\n          break;\n        // Rotation\n\n        case 'rotate':\n          if (typeof value === 'number') {\n            result[attr] += value;\n          }\n\n          break;\n      }\n    }\n\n    return result;\n  }\n\n  exports.mergeCustomisations = mergeCustomisations;\n});\nvar build = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.iconToSVG = void 0;\n  /**\n   * Get preserveAspectRatio value\n   */\n\n  function preserveAspectRatio(props) {\n    let result = '';\n\n    switch (props.hAlign) {\n      case 'left':\n        result += 'xMin';\n        break;\n\n      case 'right':\n        result += 'xMax';\n        break;\n\n      default:\n        result += 'xMid';\n    }\n\n    switch (props.vAlign) {\n      case 'top':\n        result += 'YMin';\n        break;\n\n      case 'bottom':\n        result += 'YMax';\n        break;\n\n      default:\n        result += 'YMid';\n    }\n\n    result += props.slice ? ' slice' : ' meet';\n    return result;\n  }\n  /**\n   * Get SVG attributes and content from icon + customisations\n   *\n   * Does not generate style to make it compatible with frameworks that use objects for style, such as React.\n   * Instead, it generates 'inline' value. If true, rendering engine should add verticalAlign: -0.125em to icon.\n   *\n   * Customisations should be normalised by platform specific parser.\n   * Result should be converted to <svg> by platform specific parser.\n   * Use replaceIDs to generate unique IDs for body.\n   */\n\n\n  function iconToSVG(icon, customisations) {\n    // viewBox\n    const box = {\n      left: icon.left,\n      top: icon.top,\n      width: icon.width,\n      height: icon.height\n    }; // Body\n\n    let body = icon.body; // Apply transformations\n\n    [icon, customisations].forEach(props => {\n      const transformations = [];\n      const hFlip = props.hFlip;\n      const vFlip = props.vFlip;\n      let rotation = props.rotate; // Icon is flipped first, then rotated\n\n      if (hFlip) {\n        if (vFlip) {\n          rotation += 2;\n        } else {\n          // Horizontal flip\n          transformations.push('translate(' + (box.width + box.left) + ' ' + (0 - box.top) + ')');\n          transformations.push('scale(-1 1)');\n          box.top = box.left = 0;\n        }\n      } else if (vFlip) {\n        // Vertical flip\n        transformations.push('translate(' + (0 - box.left) + ' ' + (box.height + box.top) + ')');\n        transformations.push('scale(1 -1)');\n        box.top = box.left = 0;\n      }\n\n      let tempValue;\n\n      if (rotation < 0) {\n        rotation -= Math.floor(rotation / 4) * 4;\n      }\n\n      rotation = rotation % 4;\n\n      switch (rotation) {\n        case 1:\n          // 90deg\n          tempValue = box.height / 2 + box.top;\n          transformations.unshift('rotate(90 ' + tempValue + ' ' + tempValue + ')');\n          break;\n\n        case 2:\n          // 180deg\n          transformations.unshift('rotate(180 ' + (box.width / 2 + box.left) + ' ' + (box.height / 2 + box.top) + ')');\n          break;\n\n        case 3:\n          // 270deg\n          tempValue = box.width / 2 + box.left;\n          transformations.unshift('rotate(-90 ' + tempValue + ' ' + tempValue + ')');\n          break;\n      }\n\n      if (rotation % 2 === 1) {\n        // Swap width/height and x/y for 90deg or 270deg rotation\n        if (box.left !== 0 || box.top !== 0) {\n          tempValue = box.left;\n          box.left = box.top;\n          box.top = tempValue;\n        }\n\n        if (box.width !== box.height) {\n          tempValue = box.width;\n          box.width = box.height;\n          box.height = tempValue;\n        }\n      }\n\n      if (transformations.length) {\n        body = '<g transform=\"' + transformations.join(' ') + '\">' + body + '</g>';\n      }\n    }); // Calculate dimensions\n\n    let width, height;\n\n    if (customisations.width === null && customisations.height === null) {\n      // Set height to '1em', calculate width\n      height = '1em';\n      width = size.calculateSize(height, box.width / box.height);\n    } else if (customisations.width !== null && customisations.height !== null) {\n      // Values are set\n      width = customisations.width;\n      height = customisations.height;\n    } else if (customisations.height !== null) {\n      // Height is set\n      height = customisations.height;\n      width = size.calculateSize(height, box.width / box.height);\n    } else {\n      // Width is set\n      width = customisations.width;\n      height = size.calculateSize(width, box.height / box.width);\n    } // Check for 'auto'\n\n\n    if (width === 'auto') {\n      width = box.width;\n    }\n\n    if (height === 'auto') {\n      height = box.height;\n    } // Convert to string\n\n\n    width = typeof width === 'string' ? width : width + '';\n    height = typeof height === 'string' ? height : height + ''; // Result\n\n    const result = {\n      attributes: {\n        width,\n        height,\n        preserveAspectRatio: preserveAspectRatio(customisations),\n        viewBox: box.left + ' ' + box.top + ' ' + box.width + ' ' + box.height\n      },\n      body\n    };\n\n    if (customisations.inline) {\n      result.inline = true;\n    }\n\n    return result;\n  }\n\n  exports.iconToSVG = iconToSVG;\n});\nvar functions$2 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.builderFunctions = void 0;\n  /**\n   * Exported builder functions\n   */\n\n  exports.builderFunctions = {\n    replaceIDs: id.replaceIDs,\n    calculateSize: size.calculateSize,\n    buildIcon: (icon$1, customisations$1) => {\n      return build.iconToSVG(icon.fullIcon(icon$1), customisations.mergeCustomisations(customisations.defaults, customisations$1));\n    }\n  };\n});\nvar modules$1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.coreModules = void 0;\n  exports.coreModules = {};\n});\nvar config$1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.defaultConfig = void 0;\n  /**\n   * Default RedundancyConfig for API calls\n   */\n\n  exports.defaultConfig = {\n    resources: [],\n    index: 0,\n    timeout: 2000,\n    rotate: 750,\n    random: false,\n    dataAfterTimeout: false\n  };\n});\nvar query = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.sendQuery = void 0;\n  /**\n   * Send query\n   */\n\n  function sendQuery(config, payload, query, done, success) {\n    // Get number of resources\n    const resourcesCount = config.resources.length; // Save start index\n\n    const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index; // Get resources\n\n    let resources;\n\n    if (config.random) {\n      // Randomise array\n      let list = config.resources.slice(0);\n      resources = [];\n\n      while (list.length > 1) {\n        const nextIndex = Math.floor(Math.random() * list.length);\n        resources.push(list[nextIndex]);\n        list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n      }\n\n      resources = resources.concat(list);\n    } else {\n      // Rearrange resources to start with startIndex\n      resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n    } // Counters, status\n\n\n    const startTime = Date.now();\n    let status = 'pending';\n    let queriesSent = 0;\n    let lastError = void 0; // Timer\n\n    let timer = null; // Execution queue\n\n    let queue = []; // Callbacks to call when query is complete\n\n    let doneCallbacks = [];\n\n    if (typeof done === 'function') {\n      doneCallbacks.push(done);\n    }\n    /**\n     * Reset timer\n     */\n\n\n    function resetTimer() {\n      if (timer) {\n        clearTimeout(timer);\n        timer = null;\n      }\n    }\n    /**\n     * Abort everything\n     */\n\n\n    function abort() {\n      // Change status\n      if (status === 'pending') {\n        status = 'aborted';\n      } // Reset timer\n\n\n      resetTimer(); // Abort all queued items\n\n      queue.forEach(item => {\n        if (item.abort) {\n          item.abort();\n        }\n\n        if (item.status === 'pending') {\n          item.status = 'aborted';\n        }\n      });\n      queue = [];\n    }\n    /**\n     * Add / replace callback to call when execution is complete.\n     * This can be used to abort pending query implementations when query is complete or aborted.\n     */\n\n\n    function subscribe(callback, overwrite) {\n      if (overwrite) {\n        doneCallbacks = [];\n      }\n\n      if (typeof callback === 'function') {\n        doneCallbacks.push(callback);\n      }\n    }\n    /**\n     * Get query status\n     */\n\n\n    function getQueryStatus() {\n      return {\n        startTime,\n        payload,\n        status,\n        queriesSent,\n        queriesPending: queue.length,\n        subscribe,\n        abort\n      };\n    }\n    /**\n     * Fail query\n     */\n\n\n    function failQuery() {\n      status = 'failed'; // Send notice to all callbacks\n\n      doneCallbacks.forEach(callback => {\n        callback(void 0, lastError);\n      });\n    }\n    /**\n     * Clear queue\n     */\n\n\n    function clearQueue() {\n      queue = queue.filter(item => {\n        if (item.status === 'pending') {\n          item.status = 'aborted';\n        }\n\n        if (item.abort) {\n          item.abort();\n        }\n\n        return false;\n      });\n    }\n    /**\n     * Got response from module\n     */\n\n\n    function moduleResponse(item, data, error) {\n      const isError = data === void 0; // Remove item from queue\n\n      queue = queue.filter(queued => queued !== item); // Check status\n\n      switch (status) {\n        case 'pending':\n          // Pending\n          break;\n\n        case 'failed':\n          if (isError || !config.dataAfterTimeout) {\n            // Query has already timed out or dataAfterTimeout is disabled\n            return;\n          } // Success after failure\n\n\n          break;\n\n        default:\n          // Aborted or completed\n          return;\n      } // Error\n\n\n      if (isError) {\n        if (error !== void 0) {\n          lastError = error;\n        }\n\n        if (!queue.length) {\n          if (!resources.length) {\n            // Nothing else queued, nothing can be queued\n            failQuery();\n          } else {\n            // Queue is empty: run next item immediately\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            execNext();\n          }\n        }\n\n        return;\n      } // Reset timers, abort pending queries\n\n\n      resetTimer();\n      clearQueue(); // Update index in Redundancy\n\n      if (success && !config.random) {\n        const index = config.resources.indexOf(item.resource);\n\n        if (index !== -1 && index !== config.index) {\n          success(index);\n        }\n      } // Mark as completed and call callbacks\n\n\n      status = 'completed';\n      doneCallbacks.forEach(callback => {\n        callback(data);\n      });\n    }\n    /**\n     * Execute next query\n     */\n\n\n    function execNext() {\n      // Check status\n      if (status !== 'pending') {\n        return;\n      } // Reset timer\n\n\n      resetTimer(); // Get resource\n\n      const resource = resources.shift();\n\n      if (resource === void 0) {\n        // Nothing to execute: wait for final timeout before failing\n        if (queue.length) {\n          const timeout = typeof config.timeout === 'function' ? config.timeout(startTime) : config.timeout;\n\n          if (timeout) {\n            // Last timeout before failing to allow late response\n            timer = setTimeout(() => {\n              resetTimer();\n\n              if (status === 'pending') {\n                // Clear queue\n                clearQueue();\n                failQuery();\n              }\n            }, timeout);\n            return;\n          }\n        } // Fail\n\n\n        failQuery();\n        return;\n      } // Create new item\n\n\n      const item = {\n        getQueryStatus,\n        status: 'pending',\n        resource,\n        done: (data, error) => {\n          moduleResponse(item, data, error);\n        }\n      }; // Add to queue\n\n      queue.push(item); // Bump next index\n\n      queriesSent++; // Get timeout for next item\n\n      const timeout = typeof config.rotate === 'function' ? config.rotate(queriesSent, startTime) : config.rotate; // Create timer\n\n      timer = setTimeout(execNext, timeout); // Execute it\n\n      query(resource, payload, item);\n    } // Execute first query on next tick\n\n\n    setTimeout(execNext); // Return getQueryStatus()\n\n    return getQueryStatus;\n  }\n\n  exports.sendQuery = sendQuery;\n});\nvar redundancy = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.initRedundancy = void 0;\n  /**\n   * Set configuration\n   */\n\n  function setConfig(config) {\n    if (typeof config !== 'object' || typeof config.resources !== 'object' || !(config.resources instanceof Array) || !config.resources.length) {\n      throw new Error('Invalid Reduncancy configuration');\n    }\n\n    const newConfig = Object.create(null);\n    let key;\n\n    for (key in config$1.defaultConfig) {\n      if (config[key] !== void 0) {\n        newConfig[key] = config[key];\n      } else {\n        newConfig[key] = config$1.defaultConfig[key];\n      }\n    }\n\n    return newConfig;\n  }\n  /**\n   * Redundancy instance\n   */\n\n\n  function initRedundancy(cfg) {\n    // Configuration\n    const config = setConfig(cfg); // List of queries\n\n    let queries = [];\n    /**\n     * Remove aborted and completed queries\n     */\n\n    function cleanup() {\n      queries = queries.filter(item => item().status === 'pending');\n    }\n    /**\n     * Send query\n     */\n\n\n    function query$1(payload, queryCallback, doneCallback) {\n      const query$1 = query.sendQuery(config, payload, queryCallback, (data, error) => {\n        // Remove query from list\n        cleanup(); // Call callback\n\n        if (doneCallback) {\n          doneCallback(data, error);\n        }\n      }, newIndex => {\n        // Update start index\n        config.index = newIndex;\n      });\n      queries.push(query$1);\n      return query$1;\n    }\n    /**\n     * Find instance\n     */\n\n\n    function find(callback) {\n      const result = queries.find(value => {\n        return callback(value);\n      });\n      return result !== void 0 ? result : null;\n    } // Create and return functions\n\n\n    const instance = {\n      query: query$1,\n      find,\n      setIndex: index => {\n        config.index = index;\n      },\n      getIndex: () => config.index,\n      cleanup\n    };\n    return instance;\n  }\n\n  exports.initRedundancy = initRedundancy;\n});\nvar sort = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.sortIcons = void 0;\n  /**\n   * Check if icons have been loaded\n   */\n\n  function sortIcons(icons) {\n    const result = {\n      loaded: [],\n      missing: [],\n      pending: []\n    };\n    const storage = Object.create(null); // Sort icons alphabetically to prevent duplicates and make sure they are sorted in API queries\n\n    icons.sort((a, b) => {\n      if (a.provider !== b.provider) {\n        return a.provider.localeCompare(b.provider);\n      }\n\n      if (a.prefix !== b.prefix) {\n        return a.prefix.localeCompare(b.prefix);\n      }\n\n      return a.name.localeCompare(b.name);\n    });\n    let lastIcon = {\n      provider: '',\n      prefix: '',\n      name: ''\n    };\n    icons.forEach(icon => {\n      if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n        return;\n      }\n\n      lastIcon = icon; // Check icon\n\n      const provider = icon.provider;\n      const prefix = icon.prefix;\n      const name = icon.name;\n\n      if (storage[provider] === void 0) {\n        storage[provider] = Object.create(null);\n      }\n\n      const providerStorage = storage[provider];\n\n      if (providerStorage[prefix] === void 0) {\n        providerStorage[prefix] = storage_1.getStorage(provider, prefix);\n      }\n\n      const localStorage = providerStorage[prefix];\n      let list;\n\n      if (localStorage.icons[name] !== void 0) {\n        list = result.loaded;\n      } else if (prefix === '' || localStorage.missing[name] !== void 0) {\n        // Mark icons without prefix as missing because they cannot be loaded from API\n        list = result.missing;\n      } else {\n        list = result.pending;\n      }\n\n      const item = {\n        provider,\n        prefix,\n        name\n      };\n      list.push(item);\n    });\n    return result;\n  }\n\n  exports.sortIcons = sortIcons;\n});\nvar callbacks = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.storeCallback = exports.updateCallbacks = exports.callbacks = void 0; // Records sorted by provider and prefix\n  // This export is only for unit testing, should not be used\n\n  exports.callbacks = Object.create(null);\n  const pendingUpdates = Object.create(null);\n  /**\n   * Remove callback\n   */\n\n  function removeCallback(sources, id) {\n    sources.forEach(source => {\n      const provider = source.provider;\n\n      if (exports.callbacks[provider] === void 0) {\n        return;\n      }\n\n      const providerCallbacks = exports.callbacks[provider];\n      const prefix = source.prefix;\n      const items = providerCallbacks[prefix];\n\n      if (items) {\n        providerCallbacks[prefix] = items.filter(row => row.id !== id);\n      }\n    });\n  }\n  /**\n   * Update all callbacks for provider and prefix\n   */\n\n\n  function updateCallbacks(provider, prefix) {\n    if (pendingUpdates[provider] === void 0) {\n      pendingUpdates[provider] = Object.create(null);\n    }\n\n    const providerPendingUpdates = pendingUpdates[provider];\n\n    if (!providerPendingUpdates[prefix]) {\n      providerPendingUpdates[prefix] = true;\n      setTimeout(() => {\n        providerPendingUpdates[prefix] = false;\n\n        if (exports.callbacks[provider] === void 0 || exports.callbacks[provider][prefix] === void 0) {\n          return;\n        } // Get all items\n\n\n        const items = exports.callbacks[provider][prefix].slice(0);\n\n        if (!items.length) {\n          return;\n        }\n\n        const storage = storage_1.getStorage(provider, prefix); // Check each item for changes\n\n        let hasPending = false;\n        items.forEach(item => {\n          const icons = item.icons;\n          const oldLength = icons.pending.length;\n          icons.pending = icons.pending.filter(icon => {\n            if (icon.prefix !== prefix) {\n              // Checking only current prefix\n              return true;\n            }\n\n            const name = icon.name;\n\n            if (storage.icons[name] !== void 0) {\n              // Loaded\n              icons.loaded.push({\n                provider,\n                prefix,\n                name\n              });\n            } else if (storage.missing[name] !== void 0) {\n              // Missing\n              icons.missing.push({\n                provider,\n                prefix,\n                name\n              });\n            } else {\n              // Pending\n              hasPending = true;\n              return true;\n            }\n\n            return false;\n          }); // Changes detected - call callback\n\n          if (icons.pending.length !== oldLength) {\n            if (!hasPending) {\n              // All icons have been loaded - remove callback from prefix\n              removeCallback([{\n                provider,\n                prefix\n              }], item.id);\n            }\n\n            item.callback(icons.loaded.slice(0), icons.missing.slice(0), icons.pending.slice(0), item.abort);\n          }\n        });\n      });\n    }\n  }\n\n  exports.updateCallbacks = updateCallbacks;\n  /**\n   * Unique id counter for callbacks\n   */\n\n  let idCounter = 0;\n  /**\n   * Add callback\n   */\n\n  function storeCallback(callback, icons, pendingSources) {\n    // Create unique id and abort function\n    const id = idCounter++;\n    const abort = removeCallback.bind(null, pendingSources, id);\n\n    if (!icons.pending.length) {\n      // Do not store item without pending icons and return function that does nothing\n      return abort;\n    } // Create item and store it for all pending prefixes\n\n\n    const item = {\n      id,\n      icons,\n      callback,\n      abort: abort\n    };\n    pendingSources.forEach(source => {\n      const provider = source.provider;\n      const prefix = source.prefix;\n\n      if (exports.callbacks[provider] === void 0) {\n        exports.callbacks[provider] = Object.create(null);\n      }\n\n      const providerCallbacks = exports.callbacks[provider];\n\n      if (providerCallbacks[prefix] === void 0) {\n        providerCallbacks[prefix] = [];\n      }\n\n      providerCallbacks[prefix].push(item);\n    });\n    return abort;\n  }\n\n  exports.storeCallback = storeCallback;\n});\nvar modules = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getAPIModule = exports.setAPIModule = void 0;\n  /**\n   * Local storate types and entries\n   */\n\n  const storage = Object.create(null);\n  /**\n   * Set API module\n   */\n\n  function setAPIModule(provider, item) {\n    storage[provider] = item;\n  }\n\n  exports.setAPIModule = setAPIModule;\n  /**\n   * Get API module\n   */\n\n  function getAPIModule(provider) {\n    return storage[provider] === void 0 ? storage[''] : storage[provider];\n  }\n\n  exports.getAPIModule = getAPIModule;\n});\nvar config = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getAPIConfig = exports.setAPIConfig = void 0;\n  /**\n   * Create full API configuration from partial data\n   */\n\n  function createConfig(source) {\n    let resources;\n\n    if (typeof source.resources === 'string') {\n      resources = [source.resources];\n    } else {\n      resources = source.resources;\n\n      if (!(resources instanceof Array) || !resources.length) {\n        return null;\n      }\n    }\n\n    const result = {\n      // API hosts\n      resources: resources,\n      // Root path\n      path: source.path === void 0 ? '/' : source.path,\n      // URL length limit\n      maxURL: source.maxURL ? source.maxURL : 500,\n      // Timeout before next host is used.\n      rotate: source.rotate ? source.rotate : 750,\n      // Timeout before failing query.\n      timeout: source.timeout ? source.timeout : 5000,\n      // Randomise default API end point.\n      random: source.random === true,\n      // Start index\n      index: source.index ? source.index : 0,\n      // Receive data after time out (used if time out kicks in first, then API module sends data anyway).\n      dataAfterTimeout: source.dataAfterTimeout !== false\n    };\n    return result;\n  }\n  /**\n   * Local storage\n   */\n\n\n  const configStorage = Object.create(null);\n  /**\n   * Redundancy for API servers.\n   *\n   * API should have very high uptime because of implemented redundancy at server level, but\n   * sometimes bad things happen. On internet 100% uptime is not possible.\n   *\n   * There could be routing problems. Server might go down for whatever reason, but it takes\n   * few minutes to detect that downtime, so during those few minutes API might not be accessible.\n   *\n   * This script has some redundancy to mitigate possible network issues.\n   *\n   * If one host cannot be reached in 'rotate' (750 by default) ms, script will try to retrieve\n   * data from different host. Hosts have different configurations, pointing to different\n   * API servers hosted at different providers.\n   */\n\n  const fallBackAPISources = ['https://api.simplesvg.com', 'https://api.unisvg.com']; // Shuffle fallback API\n\n  const fallBackAPI = [];\n\n  while (fallBackAPISources.length > 0) {\n    if (fallBackAPISources.length === 1) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      // Get first or last item\n      if (Math.random() > 0.5) {\n        fallBackAPI.push(fallBackAPISources.shift());\n      } else {\n        fallBackAPI.push(fallBackAPISources.pop());\n      }\n    }\n  } // Add default API\n\n\n  configStorage[''] = createConfig({\n    resources: ['https://api.iconify.design'].concat(fallBackAPI)\n  });\n  /**\n   * Add custom config for provider\n   */\n\n  function setAPIConfig(provider, customConfig) {\n    const config = createConfig(customConfig);\n\n    if (config === null) {\n      return false;\n    }\n\n    configStorage[provider] = config;\n    return true;\n  }\n\n  exports.setAPIConfig = setAPIConfig;\n  /**\n   * Get API configuration\n   */\n\n  const getAPIConfig = provider => configStorage[provider];\n\n  exports.getAPIConfig = getAPIConfig;\n});\nvar list = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getProviders = exports.listToIcons = void 0;\n  /**\n   * Convert icons list from string/icon mix to icons and validate them\n   */\n\n  function listToIcons(list, validate = true, simpleNames = false) {\n    const result = [];\n    list.forEach(item => {\n      const icon = typeof item === 'string' ? name.stringToIcon(item, false, simpleNames) : item;\n\n      if (!validate || name.validateIcon(icon, simpleNames)) {\n        result.push({\n          provider: icon.provider,\n          prefix: icon.prefix,\n          name: icon.name\n        });\n      }\n    });\n    return result;\n  }\n\n  exports.listToIcons = listToIcons;\n  /**\n   * Get all providers\n   */\n\n  function getProviders(list) {\n    const providers = Object.create(null);\n    list.forEach(icon => {\n      providers[icon.provider] = true;\n    });\n    return Object.keys(providers);\n  }\n\n  exports.getProviders = getProviders;\n});\nvar api = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.API = exports.getRedundancyCache = void 0; // Empty abort callback for loadIcons()\n\n  function emptyCallback() {// Do nothing\n  }\n\n  const pendingIcons = Object.create(null);\n  /**\n   * List of icons that are waiting to be loaded.\n   *\n   * List is passed to API module, then cleared.\n   *\n   * This list should not be used for any checks, use pendingIcons to check\n   * if icons is being loaded.\n   *\n   * [provider][prefix] = array of icon names\n   */\n\n  const iconsToLoad = Object.create(null); // Flags to merge multiple synchronous icon requests in one asynchronous request\n\n  const loaderFlags = Object.create(null);\n  const queueFlags = Object.create(null);\n  const redundancyCache = Object.create(null);\n  /**\n   * Get Redundancy instance for provider\n   */\n\n  function getRedundancyCache(provider) {\n    if (redundancyCache[provider] === void 0) {\n      const config$1 = config.getAPIConfig(provider);\n\n      if (!config$1) {\n        // No way to load icons because configuration is not set!\n        return;\n      }\n\n      const redundancy$1 = redundancy.initRedundancy(config$1);\n      const cachedReundancy = {\n        config: config$1,\n        redundancy: redundancy$1\n      };\n      redundancyCache[provider] = cachedReundancy;\n    }\n\n    return redundancyCache[provider];\n  }\n\n  exports.getRedundancyCache = getRedundancyCache;\n  /**\n   * Function called when new icons have been loaded\n   */\n\n  function loadedNewIcons(provider, prefix) {\n    // Run only once per tick, possibly joining multiple API responses in one call\n    if (loaderFlags[provider] === void 0) {\n      loaderFlags[provider] = Object.create(null);\n    }\n\n    const providerLoaderFlags = loaderFlags[provider];\n\n    if (!providerLoaderFlags[prefix]) {\n      providerLoaderFlags[prefix] = true;\n      setTimeout(() => {\n        providerLoaderFlags[prefix] = false;\n        callbacks.updateCallbacks(provider, prefix);\n      });\n    }\n  } // Storage for errors for loadNewIcons(). Used to avoid spamming log with identical errors.\n\n\n  const errorsCache = Object.create(null);\n  /**\n   * Load icons\n   */\n\n  function loadNewIcons(provider, prefix, icons) {\n    function err() {\n      const key = (provider === '' ? '' : '@' + provider + ':') + prefix;\n      const time = Math.floor(Date.now() / 60000); // log once in a minute\n\n      if (errorsCache[key] < time) {\n        errorsCache[key] = time;\n        console.error('Unable to retrieve icons for \"' + key + '\" because API is not configured properly.');\n      }\n    } // Create nested objects if needed\n\n\n    if (iconsToLoad[provider] === void 0) {\n      iconsToLoad[provider] = Object.create(null);\n    }\n\n    const providerIconsToLoad = iconsToLoad[provider];\n\n    if (queueFlags[provider] === void 0) {\n      queueFlags[provider] = Object.create(null);\n    }\n\n    const providerQueueFlags = queueFlags[provider];\n\n    if (pendingIcons[provider] === void 0) {\n      pendingIcons[provider] = Object.create(null);\n    }\n\n    const providerPendingIcons = pendingIcons[provider]; // Add icons to queue\n\n    if (providerIconsToLoad[prefix] === void 0) {\n      providerIconsToLoad[prefix] = icons;\n    } else {\n      providerIconsToLoad[prefix] = providerIconsToLoad[prefix].concat(icons).sort();\n    } // Redundancy item\n\n\n    let cachedReundancy; // Trigger update on next tick, mering multiple synchronous requests into one asynchronous request\n\n    if (!providerQueueFlags[prefix]) {\n      providerQueueFlags[prefix] = true;\n      setTimeout(() => {\n        providerQueueFlags[prefix] = false; // Get icons and delete queue\n\n        const icons = providerIconsToLoad[prefix];\n        delete providerIconsToLoad[prefix]; // Get API module\n\n        const api = modules.getAPIModule(provider);\n\n        if (!api) {\n          // No way to load icons!\n          err();\n          return;\n        } // Get API config and Redundancy instance\n\n\n        if (cachedReundancy === void 0) {\n          const redundancy = getRedundancyCache(provider);\n\n          if (redundancy === void 0) {\n            // No way to load icons because configuration is not set!\n            err();\n            return;\n          }\n\n          cachedReundancy = redundancy;\n        } // Prepare parameters and run queries\n\n\n        const params = api.prepare(provider, prefix, icons);\n        params.forEach(item => {\n          cachedReundancy.redundancy.query(item, api.send, (data, error) => {\n            const storage = storage_1.getStorage(provider, prefix); // Check for error\n\n            if (typeof data !== 'object') {\n              if (error !== 404) {\n                // Do not handle error unless it is 404\n                return;\n              } // Not found: mark as missing\n\n\n              const t = Date.now();\n              item.icons.forEach(name => {\n                storage.missing[name] = t;\n              });\n            } else {\n              // Add icons to storage\n              try {\n                const added = storage_1.addIconSet(storage, data, 'all');\n\n                if (typeof added === 'boolean') {\n                  return;\n                } // Remove added icons from pending list\n\n\n                const pending = providerPendingIcons[prefix];\n                added.forEach(name => {\n                  delete pending[name];\n                }); // Cache API response\n\n                if (modules$1.coreModules.cache) {\n                  modules$1.coreModules.cache(provider, data);\n                }\n              } catch (err) {\n                console.error(err);\n              }\n            } // Trigger update on next tick\n\n\n            loadedNewIcons(provider, prefix);\n          });\n        });\n      });\n    }\n  }\n  /**\n   * Check if icon is being loaded\n   */\n\n\n  const isPending = icon => {\n    return pendingIcons[icon.provider] !== void 0 && pendingIcons[icon.provider][icon.prefix] !== void 0 && pendingIcons[icon.provider][icon.prefix][icon.name] !== void 0;\n  };\n  /**\n   * Load icons\n   */\n\n\n  const loadIcons = (icons, callback) => {\n    // Clean up and copy icons list\n    const cleanedIcons = list.listToIcons(icons, true, functions$3.allowSimpleNames()); // Sort icons by missing/loaded/pending\n    // Pending means icon is either being requsted or is about to be requested\n\n    const sortedIcons = sort.sortIcons(cleanedIcons);\n\n    if (!sortedIcons.pending.length) {\n      // Nothing to load\n      let callCallback = true;\n\n      if (callback) {\n        setTimeout(() => {\n          if (callCallback) {\n            callback(sortedIcons.loaded, sortedIcons.missing, sortedIcons.pending, emptyCallback);\n          }\n        });\n      }\n\n      return () => {\n        callCallback = false;\n      };\n    } // Get all sources for pending icons\n\n\n    const newIcons = Object.create(null);\n    const sources = [];\n    let lastProvider, lastPrefix;\n    sortedIcons.pending.forEach(icon => {\n      const provider = icon.provider;\n      const prefix = icon.prefix;\n\n      if (prefix === lastPrefix && provider === lastProvider) {\n        return;\n      }\n\n      lastProvider = provider;\n      lastPrefix = prefix;\n      sources.push({\n        provider,\n        prefix\n      });\n\n      if (pendingIcons[provider] === void 0) {\n        pendingIcons[provider] = Object.create(null);\n      }\n\n      const providerPendingIcons = pendingIcons[provider];\n\n      if (providerPendingIcons[prefix] === void 0) {\n        providerPendingIcons[prefix] = Object.create(null);\n      }\n\n      if (newIcons[provider] === void 0) {\n        newIcons[provider] = Object.create(null);\n      }\n\n      const providerNewIcons = newIcons[provider];\n\n      if (providerNewIcons[prefix] === void 0) {\n        providerNewIcons[prefix] = [];\n      }\n    }); // List of new icons\n\n    const time = Date.now(); // Filter pending icons list: find icons that are not being loaded yet\n    // If icon was called before, it must exist in pendingIcons or storage, but because this\n    // function is called right after sortIcons() that checks storage, icon is definitely not in storage.\n\n    sortedIcons.pending.forEach(icon => {\n      const provider = icon.provider;\n      const prefix = icon.prefix;\n      const name = icon.name;\n      const pendingQueue = pendingIcons[provider][prefix];\n\n      if (pendingQueue[name] === void 0) {\n        // New icon - add to pending queue to mark it as being loaded\n        pendingQueue[name] = time; // Add it to new icons list to pass it to API module for loading\n\n        newIcons[provider][prefix].push(name);\n      }\n    }); // Load icons on next tick to make sure result is not returned before callback is stored and\n    // to consolidate multiple synchronous loadIcons() calls into one asynchronous API call\n\n    sources.forEach(source => {\n      const provider = source.provider;\n      const prefix = source.prefix;\n\n      if (newIcons[provider][prefix].length) {\n        loadNewIcons(provider, prefix, newIcons[provider][prefix]);\n      }\n    }); // Store callback and return abort function\n\n    return callback ? callbacks.storeCallback(callback, sortedIcons, sources) : emptyCallback;\n  };\n  /**\n   * Export module\n   */\n\n\n  exports.API = {\n    isPending,\n    loadIcons\n  };\n});\nvar functions$1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.APIInternalFunctions = exports.APIFunctions = void 0;\n  exports.APIFunctions = {\n    loadIcons: api.API.loadIcons,\n    addAPIProvider: config.setAPIConfig\n  };\n  exports.APIInternalFunctions = {\n    getAPI: api.getRedundancyCache,\n    getAPIConfig: config.getAPIConfig,\n    setAPIModule: modules.setAPIModule\n  };\n});\nvar jsonp = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getAPIModule = void 0;\n  let rootVar = null;\n  /**\n   * Endpoint\n   */\n\n  let endPoint = '{prefix}.js?icons={icons}&callback={callback}';\n  /**\n   * Cache: provider:prefix = value\n   */\n\n  const maxLengthCache = Object.create(null);\n  const pathCache = Object.create(null);\n  /**\n   * Get hash for query\n   *\n   * Hash is used in JSONP callback name, so same queries end up with same JSONP callback,\n   * allowing response to be cached in browser.\n   */\n\n  function hash(str) {\n    let total = 0,\n        i;\n\n    for (i = str.length - 1; i >= 0; i--) {\n      total += str.charCodeAt(i);\n    }\n\n    return total % 999;\n  }\n  /**\n   * Get root object\n   */\n\n\n  function getGlobal() {\n    // Create root\n    if (rootVar === null) {\n      // window\n      const globalRoot = self; // Test for window.Iconify. If missing, create 'IconifyJSONP'\n\n      let prefix = 'Iconify';\n      let extraPrefix = '.cb';\n\n      if (globalRoot[prefix] === void 0) {\n        // Use 'IconifyJSONP' global\n        prefix = 'IconifyJSONP';\n        extraPrefix = '';\n\n        if (globalRoot[prefix] === void 0) {\n          globalRoot[prefix] = Object.create(null);\n        }\n\n        rootVar = globalRoot[prefix];\n      } else {\n        // Use 'Iconify.cb'\n        const iconifyRoot = globalRoot[prefix];\n\n        if (iconifyRoot.cb === void 0) {\n          iconifyRoot.cb = Object.create(null);\n        }\n\n        rootVar = iconifyRoot.cb;\n      } // Change end point\n\n\n      endPoint = endPoint.replace('{callback}', prefix + extraPrefix + '.{cb}');\n    }\n\n    return rootVar;\n  }\n  /**\n   * Return API module\n   */\n\n\n  const getAPIModule = getAPIConfig => {\n    /**\n     * Calculate maximum icons list length for prefix\n     */\n    function calculateMaxLength(provider, prefix) {\n      // Get config and store path\n      const config = getAPIConfig(provider);\n\n      if (!config) {\n        return 0;\n      } // Calculate\n\n\n      let result;\n\n      if (!config.maxURL) {\n        result = 0;\n      } else {\n        let maxHostLength = 0;\n        config.resources.forEach(item => {\n          const host = item;\n          maxHostLength = Math.max(maxHostLength, host.length);\n        }); // Make sure global is set\n\n        getGlobal(); // Extra width: prefix (3) + counter (4) - '{cb}' (4)\n\n        const extraLength = 3; // Get available length\n\n        result = config.maxURL - maxHostLength - config.path.length - endPoint.replace('{provider}', provider).replace('{prefix}', prefix).replace('{icons}', '').length - extraLength;\n      } // Cache stuff and return result\n\n\n      const cacheKey = provider + ':' + prefix;\n      pathCache[cacheKey] = config.path;\n      maxLengthCache[cacheKey] = result;\n      return result;\n    }\n    /**\n     * Prepare params\n     */\n\n\n    const prepare = (provider, prefix, icons) => {\n      const results = []; // Get maximum icons list length\n\n      const cacheKey = provider + ':' + prefix;\n      let maxLength = maxLengthCache[cacheKey];\n\n      if (maxLength === void 0) {\n        maxLength = calculateMaxLength(provider, prefix);\n      } // Split icons\n\n\n      let item = {\n        provider,\n        prefix,\n        icons: []\n      };\n      let length = 0;\n      icons.forEach((name, index) => {\n        length += name.length + 1;\n\n        if (length >= maxLength && index > 0) {\n          // Next set\n          results.push(item);\n          item = {\n            provider,\n            prefix,\n            icons: []\n          };\n          length = name.length;\n        }\n\n        item.icons.push(name);\n      });\n      results.push(item);\n      return results;\n    };\n    /**\n     * Load icons\n     */\n\n\n    const send = (host, params, status) => {\n      const provider = params.provider;\n      const prefix = params.prefix;\n      const icons = params.icons;\n      const iconsList = icons.join(',');\n      const cacheKey = provider + ':' + prefix; // Create callback prefix\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n      const cbPrefix = prefix.split('-').shift().slice(0, 3);\n      const global = getGlobal(); // Callback hash\n\n      let cbCounter = hash(provider + ':' + host + ':' + prefix + ':' + iconsList);\n\n      while (global[cbPrefix + cbCounter] !== void 0) {\n        cbCounter++;\n      }\n\n      const callbackName = cbPrefix + cbCounter;\n      const path = pathCache[cacheKey] + endPoint.replace('{provider}', provider).replace('{prefix}', prefix).replace('{icons}', iconsList).replace('{cb}', callbackName);\n\n      global[callbackName] = data => {\n        // Remove callback and complete query\n        delete global[callbackName];\n        status.done(data);\n      }; // Create URI\n\n\n      const uri = host + path; // console.log('API query:', uri);\n      // Create script and append it to head\n\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.async = true;\n      script.src = uri;\n      document.head.appendChild(script);\n    }; // Return functions\n\n\n    return {\n      prepare,\n      send\n    };\n  };\n\n  exports.getAPIModule = getAPIModule;\n});\nvar fetch_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getAPIModule = exports.setFetch = void 0;\n  /**\n   * Endpoint\n   */\n\n  const endPoint = '{prefix}.json?icons={icons}';\n  /**\n   * Cache\n   */\n\n  const maxLengthCache = Object.create(null);\n  const pathCache = Object.create(null);\n  /**\n   * Fetch function\n   *\n   * Use this to set 'cross-fetch' in node.js environment if you are retrieving icons on server side.\n   * Not needed when using stuff like Next.js or SvelteKit because components use API only on client side.\n   */\n\n  let fetchModule = null;\n\n  try {\n    fetchModule = fetch;\n  } catch (err) {//\n  }\n\n  function setFetch(fetch) {\n    fetchModule = fetch;\n  }\n\n  exports.setFetch = setFetch;\n  /**\n   * Return API module\n   */\n\n  const getAPIModule = getAPIConfig => {\n    /**\n     * Calculate maximum icons list length for prefix\n     */\n    function calculateMaxLength(provider, prefix) {\n      // Get config and store path\n      const config = getAPIConfig(provider);\n\n      if (!config) {\n        return 0;\n      } // Calculate\n\n\n      let result;\n\n      if (!config.maxURL) {\n        result = 0;\n      } else {\n        let maxHostLength = 0;\n        config.resources.forEach(item => {\n          const host = item;\n          maxHostLength = Math.max(maxHostLength, host.length);\n        }); // Get available length\n\n        result = config.maxURL - maxHostLength - config.path.length - endPoint.replace('{provider}', provider).replace('{prefix}', prefix).replace('{icons}', '').length;\n      } // Cache stuff and return result\n\n\n      const cacheKey = provider + ':' + prefix;\n      pathCache[cacheKey] = config.path;\n      maxLengthCache[cacheKey] = result;\n      return result;\n    }\n    /**\n     * Prepare params\n     */\n\n\n    const prepare = (provider, prefix, icons) => {\n      const results = []; // Get maximum icons list length\n\n      let maxLength = maxLengthCache[prefix];\n\n      if (maxLength === void 0) {\n        maxLength = calculateMaxLength(provider, prefix);\n      } // Split icons\n\n\n      let item = {\n        provider,\n        prefix,\n        icons: []\n      };\n      let length = 0;\n      icons.forEach((name, index) => {\n        length += name.length + 1;\n\n        if (length >= maxLength && index > 0) {\n          // Next set\n          results.push(item);\n          item = {\n            provider,\n            prefix,\n            icons: []\n          };\n          length = name.length;\n        }\n\n        item.icons.push(name);\n      });\n      results.push(item);\n      return results;\n    };\n    /**\n     * Load icons\n     */\n\n\n    const send = (host, params, status) => {\n      const provider = params.provider;\n      const prefix = params.prefix;\n      const icons = params.icons;\n      const iconsList = icons.join(',');\n      const cacheKey = provider + ':' + prefix;\n      const path = pathCache[cacheKey] + endPoint.replace('{provider}', provider).replace('{prefix}', prefix).replace('{icons}', iconsList);\n\n      if (!fetchModule) {\n        // Fail: return 424 Failed Dependency (its not meant to be used like that, but it is the best match)\n        status.done(void 0, 424);\n        return;\n      } // console.log('API query:', host + path);\n\n\n      fetchModule(host + path).then(response => {\n        if (response.status !== 200) {\n          status.done(void 0, response.status);\n          return;\n        }\n\n        return response.json();\n      }).then(data => {\n        if (typeof data !== 'object' || data === null) {\n          return;\n        } // Store cache and complete\n\n\n        status.done(data);\n      }).catch(err => {\n        // Error\n        status.done(void 0, err.errno);\n      });\n    }; // Return functions\n\n\n    return {\n      prepare,\n      send\n    };\n  };\n\n  exports.getAPIModule = getAPIModule;\n});\nvar browserStorage = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.storeCache = exports.loadCache = exports.mock = exports.emptyList = exports.count = exports.config = void 0; // After changing configuration change it in tests/*/fake_cache.ts\n  // Cache version. Bump when structure changes\n\n  const cacheVersion = 'iconify2'; // Cache keys\n\n  const cachePrefix = 'iconify';\n  const countKey = cachePrefix + '-count';\n  const versionKey = cachePrefix + '-version';\n  /**\n   * Cache expiration\n   */\n\n  const hour = 3600000;\n  const cacheExpiration = 168; // In hours\n\n  /**\n   * Storage configuration\n   */\n\n  exports.config = {\n    local: true,\n    session: true\n  };\n  /**\n   * Flag to check if storage has been loaded\n   */\n\n  let loaded = false;\n  /**\n   * Items counter\n   */\n\n  exports.count = {\n    local: 0,\n    session: 0\n  };\n  /**\n   * List of empty items\n   */\n\n  exports.emptyList = {\n    local: [],\n    session: []\n  };\n\n  let _window = typeof window === 'undefined' ? {} : window;\n\n  function mock(fakeWindow) {\n    loaded = false;\n    _window = fakeWindow;\n  }\n\n  exports.mock = mock;\n  /**\n   * Get global\n   *\n   * @param key\n   */\n\n  function getGlobal(key) {\n    const attr = key + 'Storage';\n\n    try {\n      if (_window && _window[attr] && typeof _window[attr].length === 'number') {\n        return _window[attr];\n      }\n    } catch (err) {//\n    } // Failed - mark as disabled\n\n\n    exports.config[key] = false;\n    return null;\n  }\n  /**\n   * Change current count for storage\n   */\n\n\n  function setCount(storage, key, value) {\n    try {\n      storage.setItem(countKey, value + '');\n      exports.count[key] = value;\n      return true;\n    } catch (err) {\n      return false;\n    }\n  }\n  /**\n   * Get current count from storage\n   *\n   * @param storage\n   */\n\n\n  function getCount(storage) {\n    const count = storage.getItem(countKey);\n\n    if (count) {\n      const total = parseInt(count);\n      return total ? total : 0;\n    }\n\n    return 0;\n  }\n  /**\n   * Initialize storage\n   *\n   * @param storage\n   * @param key\n   */\n\n\n  function initCache(storage, key) {\n    try {\n      storage.setItem(versionKey, cacheVersion);\n    } catch (err) {//\n    }\n\n    setCount(storage, key, 0);\n  }\n  /**\n   * Destroy old cache\n   *\n   * @param storage\n   */\n\n\n  function destroyCache(storage) {\n    try {\n      const total = getCount(storage);\n\n      for (let i = 0; i < total; i++) {\n        storage.removeItem(cachePrefix + i);\n      }\n    } catch (err) {//\n    }\n  }\n  /**\n   * Load icons from cache\n   */\n\n\n  const loadCache = () => {\n    if (loaded) {\n      return;\n    }\n\n    loaded = true; // Minimum time\n\n    const minTime = Math.floor(Date.now() / hour) - cacheExpiration; // Load data from storage\n\n    function load(key) {\n      const func = getGlobal(key);\n\n      if (!func) {\n        return;\n      } // Get one item from storage\n\n\n      const getItem = index => {\n        const name = cachePrefix + index;\n        const item = func.getItem(name);\n\n        if (typeof item !== 'string') {\n          // Does not exist\n          return false;\n        } // Get item, validate it\n\n\n        let valid = true;\n\n        try {\n          // Parse, check time stamp\n          const data = JSON.parse(item);\n\n          if (typeof data !== 'object' || typeof data.cached !== 'number' || data.cached < minTime || typeof data.provider !== 'string' || typeof data.data !== 'object' || typeof data.data.prefix !== 'string') {\n            valid = false;\n          } else {\n            // Add icon set\n            const provider = data.provider;\n            const prefix = data.data.prefix;\n            const storage = storage_1.getStorage(provider, prefix);\n            valid = storage_1.addIconSet(storage, data.data);\n          }\n        } catch (err) {\n          valid = false;\n        }\n\n        if (!valid) {\n          func.removeItem(name);\n        }\n\n        return valid;\n      };\n\n      try {\n        // Get version\n        const version = func.getItem(versionKey);\n\n        if (version !== cacheVersion) {\n          if (version) {\n            // Version is set, but invalid - remove old entries\n            destroyCache(func);\n          } // Empty data\n\n\n          initCache(func, key);\n          return;\n        } // Get number of stored items\n\n\n        let total = getCount(func);\n\n        for (let i = total - 1; i >= 0; i--) {\n          if (!getItem(i)) {\n            // Remove item\n            if (i === total - 1) {\n              // Last item - reduce country\n              total--;\n            } else {\n              // Mark as empty\n              exports.emptyList[key].push(i);\n            }\n          }\n        } // Update total\n\n\n        setCount(func, key, total);\n      } catch (err) {//\n      }\n    }\n\n    for (const key in exports.config) {\n      load(key);\n    }\n  };\n\n  exports.loadCache = loadCache;\n  /**\n   * Function to cache icons\n   */\n\n  const storeCache = (provider, data) => {\n    if (!loaded) {\n      exports.loadCache();\n    }\n\n    function store(key) {\n      if (!exports.config[key]) {\n        return false;\n      }\n\n      const func = getGlobal(key);\n\n      if (!func) {\n        return false;\n      } // Get item index\n\n\n      let index = exports.emptyList[key].shift();\n\n      if (index === void 0) {\n        // Create new index\n        index = exports.count[key];\n\n        if (!setCount(func, key, index + 1)) {\n          return false;\n        }\n      } // Create and save item\n\n\n      try {\n        const item = {\n          cached: Math.floor(Date.now() / hour),\n          provider,\n          data\n        };\n        func.setItem(cachePrefix + index, JSON.stringify(item));\n      } catch (err) {\n        return false;\n      }\n\n      return true;\n    } // Attempt to store at localStorage first, then at sessionStorage\n\n\n    if (!store('local')) {\n      store('session');\n    }\n  };\n\n  exports.storeCache = storeCache;\n});\nvar functions = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.toggleBrowserCache = void 0;\n  /**\n   * Toggle cache\n   */\n\n  function toggleBrowserCache(storage, value) {\n    switch (storage) {\n      case 'local':\n      case 'session':\n        browserStorage.config[storage] = value;\n        break;\n\n      case 'all':\n        for (const key in browserStorage.config) {\n          browserStorage.config[key] = value;\n        }\n\n        break;\n    }\n  }\n\n  exports.toggleBrowserCache = toggleBrowserCache;\n});\nvar shorthand = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.alignmentFromString = exports.flipFromString = void 0;\n  const separator = /[\\s,]+/;\n  /**\n   * Apply \"flip\" string to icon customisations\n   */\n\n  function flipFromString(custom, flip) {\n    flip.split(separator).forEach(str => {\n      const value = str.trim();\n\n      switch (value) {\n        case 'horizontal':\n          custom.hFlip = true;\n          break;\n\n        case 'vertical':\n          custom.vFlip = true;\n          break;\n      }\n    });\n  }\n\n  exports.flipFromString = flipFromString;\n  /**\n   * Apply \"align\" string to icon customisations\n   */\n\n  function alignmentFromString(custom, align) {\n    align.split(separator).forEach(str => {\n      const value = str.trim();\n\n      switch (value) {\n        case 'left':\n        case 'center':\n        case 'right':\n          custom.hAlign = value;\n          break;\n\n        case 'top':\n        case 'middle':\n        case 'bottom':\n          custom.vAlign = value;\n          break;\n\n        case 'slice':\n        case 'crop':\n          custom.slice = true;\n          break;\n\n        case 'meet':\n          custom.slice = false;\n      }\n    });\n  }\n\n  exports.alignmentFromString = alignmentFromString;\n});\nvar rotate = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.rotateFromString = void 0;\n  /**\n   * Get rotation value\n   */\n\n  function rotateFromString(value) {\n    const units = value.replace(/^-?[0-9.]*/, '');\n\n    function cleanup(value) {\n      while (value < 0) {\n        value += 4;\n      }\n\n      return value % 4;\n    }\n\n    if (units === '') {\n      const num = parseInt(value);\n      return isNaN(num) ? 0 : cleanup(num);\n    } else if (units !== value) {\n      let split = 0;\n\n      switch (units) {\n        case '%':\n          // 25% -> 1, 50% -> 2, ...\n          split = 25;\n          break;\n\n        case 'deg':\n          // 90deg -> 1, 180deg -> 2, ...\n          split = 90;\n      }\n\n      if (split) {\n        let num = parseFloat(value.slice(0, value.length - units.length));\n\n        if (isNaN(num)) {\n          return 0;\n        }\n\n        num = num / split;\n        return num % 1 === 0 ? cleanup(num) : 0;\n      }\n    }\n\n    return 0;\n  }\n\n  exports.rotateFromString = rotateFromString;\n});\n/**\n * Default SVG attributes\n */\n\nconst svgDefaults = {\n  'xmlns': 'http://www.w3.org/2000/svg',\n  'xmlnsXlink': 'http://www.w3.org/1999/xlink',\n  'aria-hidden': true,\n  'role': 'img',\n  'style': {} // Include style if it isn't set to add verticalAlign later\n\n};\n/**\n * Default values for customisations for inline icon\n */\n\nconst inlineDefaults = { ...customisations.defaults,\n  inline: true\n};\n/**\n * Render icon\n */\n\nconst render = ( // Icon must be validated before calling this function\nicon, // Partial properties\nprops, // True if icon should have vertical-align added\ninline, // Optional reference for SVG, extracted by React.forwardRef()\nref) => {\n  // Get default properties\n  const defaultProps = inline ? inlineDefaults : customisations.defaults; // Get all customisations\n\n  const customisations$1 = customisations.mergeCustomisations(defaultProps, props); // Create style\n\n  const style = typeof props.style === 'object' && props.style !== null ? props.style : {}; // Create SVG component properties\n\n  const componentProps = { ...svgDefaults,\n    ref,\n    style\n  }; // Get element properties\n\n  for (let key in props) {\n    const value = props[key];\n\n    if (value === void 0) {\n      continue;\n    }\n\n    switch (key) {\n      // Properties to ignore\n      case 'icon':\n      case 'style':\n      case 'children':\n      case 'onLoad':\n      case '_ref':\n      case '_inline':\n        break;\n      // Boolean attributes\n\n      case 'inline':\n      case 'hFlip':\n      case 'vFlip':\n        customisations$1[key] = value === true || value === 'true' || value === 1;\n        break;\n      // Flip as string: 'horizontal,vertical'\n\n      case 'flip':\n        if (typeof value === 'string') {\n          shorthand.flipFromString(customisations$1, value);\n        }\n\n        break;\n      // Alignment as string\n\n      case 'align':\n        if (typeof value === 'string') {\n          shorthand.alignmentFromString(customisations$1, value);\n        }\n\n        break;\n      // Color: copy to style\n\n      case 'color':\n        style.color = value;\n        break;\n      // Rotation as string\n\n      case 'rotate':\n        if (typeof value === 'string') {\n          customisations$1[key] = rotate.rotateFromString(value);\n        } else if (typeof value === 'number') {\n          customisations$1[key] = value;\n        }\n\n        break;\n      // Remove aria-hidden\n\n      case 'ariaHidden':\n      case 'aria-hidden':\n        if (value !== true && value !== 'true') {\n          delete componentProps['aria-hidden'];\n        }\n\n        break;\n      // Copy missing property if it does not exist in customisations\n\n      default:\n        if (defaultProps[key] === void 0) {\n          componentProps[key] = value;\n        }\n\n    }\n  } // Generate icon\n\n\n  const item = build.iconToSVG(icon, customisations$1); // Counter for ids based on \"id\" property to render icons consistently on server and client\n\n  let localCounter = 0;\n  const id$1 = props.id; // Add icon stuff\n\n  componentProps.dangerouslySetInnerHTML = {\n    __html: id.replaceIDs(item.body, id$1 ? () => id$1 + '-' + localCounter++ : 'iconify-react-')\n  };\n\n  for (let key in item.attributes) {\n    componentProps[key] = item.attributes[key];\n  }\n\n  if (item.inline && style.verticalAlign === void 0) {\n    style.verticalAlign = '-0.125em';\n  }\n\n  return React.createElement('svg', componentProps);\n};\n/**\n * Enable and disable browser cache\n */\n\n\nconst enableCache = storage => functions.toggleBrowserCache(storage, true);\n\nconst disableCache = storage => functions.toggleBrowserCache(storage, false);\n/* Storage functions */\n\n/**\n * Check if icon exists\n */\n\n\nconst iconExists = functions$3.storageFunctions.iconExists;\n/**\n * Get icon data\n */\n\nconst getIcon = functions$3.storageFunctions.getIcon;\n/**\n * List available icons\n */\n\nconst listIcons = functions$3.storageFunctions.listIcons;\n/**\n * Add one icon\n */\n\nconst addIcon = functions$3.storageFunctions.addIcon;\n/**\n * Add icon set\n */\n\nconst addCollection = functions$3.storageFunctions.addCollection;\n/* Builder functions */\n\n/**\n * Calculate icon size\n */\n\nconst calculateSize = functions$2.builderFunctions.calculateSize;\n/**\n * Replace unique ids in content\n */\n\nconst replaceIDs = functions$2.builderFunctions.replaceIDs;\n/**\n * Build SVG\n */\n\nconst buildIcon = functions$2.builderFunctions.buildIcon;\n/* API functions */\n\n/**\n * Load icons\n */\n\nconst loadIcons = functions$1.APIFunctions.loadIcons;\n/**\n * Add API provider\n */\n\nconst addAPIProvider = functions$1.APIFunctions.addAPIProvider;\n/**\n * Export internal functions that can be used by third party implementations\n */\n\nconst _api = functions$1.APIInternalFunctions;\n/**\n * Initialise stuff\n */\n// Enable short names\n\nfunctions$3.allowSimpleNames(true); // Set API\n\nmodules$1.coreModules.api = api.API; // Use Fetch API by default\n\nlet getAPIModule = fetch_1.getAPIModule;\n\ntry {\n  if (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    // If window and document exist, attempt to load whatever module is available, otherwise use Fetch API\n    getAPIModule = typeof fetch === 'function' && typeof Promise === 'function' ? fetch_1.getAPIModule : jsonp.getAPIModule;\n  }\n} catch (err) {//\n}\n\nmodules.setAPIModule('', getAPIModule(config.getAPIConfig));\n/**\n * Function to enable node-fetch for getting icons on server side\n */\n\n_api.setFetch = nodeFetch => {\n  fetch_1.setFetch(nodeFetch);\n\n  if (getAPIModule !== fetch_1.getAPIModule) {\n    getAPIModule = fetch_1.getAPIModule;\n    modules.setAPIModule('', getAPIModule(config.getAPIConfig));\n  }\n};\n/**\n * Browser stuff\n */\n\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  // Set cache and load existing cache\n  modules$1.coreModules.cache = browserStorage.storeCache;\n  browserStorage.loadCache();\n  const _window = window; // Load icons from global \"IconifyPreload\"\n\n  if (_window.IconifyPreload !== void 0) {\n    const preload = _window.IconifyPreload;\n    const err = 'Invalid IconifyPreload syntax.';\n\n    if (typeof preload === 'object' && preload !== null) {\n      (preload instanceof Array ? preload : [preload]).forEach(item => {\n        try {\n          if ( // Check if item is an object and not null/array\n          typeof item !== 'object' || item === null || item instanceof Array || // Check for 'icons' and 'prefix'\n          typeof item.icons !== 'object' || typeof item.prefix !== 'string' || // Add icon set\n          !addCollection(item)) {\n            console.error(err);\n          }\n        } catch (e) {\n          console.error(err);\n        }\n      });\n    }\n  } // Set API from global \"IconifyProviders\"\n\n\n  if (_window.IconifyProviders !== void 0) {\n    const providers = _window.IconifyProviders;\n\n    if (typeof providers === 'object' && providers !== null) {\n      for (let key in providers) {\n        const err = 'IconifyProviders[' + key + '] is invalid.';\n\n        try {\n          const value = providers[key];\n\n          if (typeof value !== 'object' || !value || value.resources === void 0) {\n            continue;\n          }\n\n          if (!config.setAPIConfig(key, value)) {\n            console.error(err);\n          }\n        } catch (e) {\n          console.error(err);\n        }\n      }\n    }\n  }\n}\n\nclass IconComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Render placeholder before component is mounted\n      icon: null\n    };\n  }\n  /**\n   * Abort loading icon\n   */\n\n\n  _abortLoading() {\n    if (this._loading) {\n      this._loading.abort();\n\n      this._loading = null;\n    }\n  }\n  /**\n   * Update state\n   */\n\n\n  _setData(icon) {\n    if (this.state.icon !== icon) {\n      this.setState({\n        icon\n      });\n    }\n  }\n  /**\n   * Check if icon should be loaded\n   */\n\n\n  _checkIcon(changed) {\n    const state = this.state;\n    const icon$1 = this.props.icon; // Icon is an object\n\n    if (typeof icon$1 === 'object' && icon$1 !== null && typeof icon$1.body === 'string') {\n      // Stop loading\n      this._icon = '';\n\n      this._abortLoading();\n\n      if (changed || state.icon === null) {\n        // Set data if it was changed\n        this._setData({\n          data: icon.fullIcon(icon$1)\n        });\n      }\n\n      return;\n    } // Invalid icon?\n\n\n    let iconName;\n\n    if (typeof icon$1 !== 'string' || (iconName = name.stringToIcon(icon$1, false, true)) === null) {\n      this._abortLoading();\n\n      this._setData(null);\n\n      return;\n    } // Load icon\n\n\n    const data = functions$3.getIconData(iconName);\n\n    if (data === null) {\n      // Icon needs to be loaded\n      if (!this._loading || this._loading.name !== icon$1) {\n        // New icon to load\n        this._abortLoading();\n\n        this._icon = '';\n\n        this._setData(null);\n\n        this._loading = {\n          name: icon$1,\n          abort: api.API.loadIcons([iconName], this._checkIcon.bind(this, false))\n        };\n      }\n\n      return;\n    } // Icon data is available\n\n\n    if (this._icon !== icon$1 || state.icon === null) {\n      // New icon or icon has been loaded\n      this._abortLoading();\n\n      this._icon = icon$1; // Add classes\n\n      const classes = ['iconify'];\n\n      if (iconName.prefix !== '') {\n        classes.push('iconify--' + iconName.prefix);\n      }\n\n      if (iconName.provider !== '') {\n        classes.push('iconify--' + iconName.provider);\n      } // Set data\n\n\n      this._setData({\n        data,\n        classes\n      });\n\n      if (this.props.onLoad) {\n        this.props.onLoad(icon$1);\n      }\n    }\n  }\n  /**\n   * Component mounted\n   */\n\n\n  componentDidMount() {\n    this._checkIcon(false);\n  }\n  /**\n   * Component updated\n   */\n\n\n  componentDidUpdate(oldProps) {\n    if (oldProps.icon !== this.props.icon) {\n      this._checkIcon(true);\n    }\n  }\n  /**\n   * Abort loading\n   */\n\n\n  componentWillUnmount() {\n    this._abortLoading();\n  }\n  /**\n   * Render\n   */\n\n\n  render() {\n    const props = this.props;\n    const icon = this.state.icon;\n\n    if (icon === null) {\n      // Render placeholder\n      return props.children ? props.children : React.createElement('span', {});\n    } // Add classes\n\n\n    let newProps = props;\n\n    if (icon.classes) {\n      newProps = { ...props,\n        className: (typeof props.className === 'string' ? props.className + ' ' : '') + icon.classes.join(' ')\n      };\n    } // Render icon\n\n\n    return render(icon.data, newProps, props._inline, props._ref);\n  }\n\n}\n/**\n * Block icon\n *\n * @param props - Component properties\n */\n\n\nconst Icon = React.forwardRef(function Icon(props, ref) {\n  const newProps = { ...props,\n    _ref: ref,\n    _inline: false\n  };\n  return React.createElement(IconComponent, newProps);\n});\n/**\n * Inline icon (has negative verticalAlign that makes it behave like icon font)\n *\n * @param props - Component properties\n */\n\nconst InlineIcon = React.forwardRef(function InlineIcon(props, ref) {\n  const newProps = { ...props,\n    _ref: ref,\n    _inline: true\n  };\n  return React.createElement(IconComponent, newProps);\n});\nexport { Icon, InlineIcon, _api, addAPIProvider, addCollection, addIcon, buildIcon, calculateSize, disableCache, enableCache, getIcon, iconExists, listIcons, loadIcons, replaceIDs };","map":{"version":3,"names":["React","createCommonjsModule","fn","module","exports","icon","Object","defineProperty","value","fullIcon","iconDefaults","minifyProps","matchName","freeze","left","top","width","height","rotate","vFlip","hFlip","data","name","validateIcon","stringToIcon","validate","allowSimpleName","provider","colonSeparated","split","slice","length","shift","pop","prefix","result","dashSeparated","join","icon$1","match","merge","mergeIconData","alias","key","prop","parse","parseIconSet","defaultsKeys","keys","resolveAlias","icons","aliases","level","parent","callback","list","added","not_found","Array","forEach","push","defaults","create","body","storage_1","listIcons","getIcon","iconExists","addIcon","addIconSet","getStorage","newStorage","storage","missing","providerStorage","t","Date","now","err","allIcons","providers","prefixes","map","concat","functions$3","storageFunctions","addCollection","getIconData","allowSimpleNames","simpleNames","allow","name$1","id","replaceIDs","regex","replaceValue","escapeRegExp","str","replace","randomPrefix","toString","Math","random","counter","ids","exec","newID","RegExp","size","calculateSize","unitsSplit","unitsTest","ratio","precision","ceil","oldParts","newParts","code","isNumber","test","num","parseFloat","isNaN","customisations","mergeCustomisations","inline","hAlign","vAlign","item","attr","build","iconToSVG","preserveAspectRatio","props","box","transformations","rotation","tempValue","floor","unshift","attributes","viewBox","functions$2","builderFunctions","buildIcon","customisations$1","modules$1","coreModules","config$1","defaultConfig","resources","index","timeout","dataAfterTimeout","query","sendQuery","config","payload","done","success","resourcesCount","startIndex","nextIndex","startTime","status","queriesSent","lastError","timer","queue","doneCallbacks","resetTimer","clearTimeout","abort","subscribe","overwrite","getQueryStatus","queriesPending","failQuery","clearQueue","filter","moduleResponse","error","isError","queued","execNext","indexOf","resource","setTimeout","redundancy","initRedundancy","setConfig","Error","newConfig","cfg","queries","cleanup","query$1","queryCallback","doneCallback","newIndex","find","instance","setIndex","getIndex","sort","sortIcons","loaded","pending","a","b","localeCompare","lastIcon","localStorage","callbacks","storeCallback","updateCallbacks","pendingUpdates","removeCallback","sources","source","providerCallbacks","items","row","providerPendingUpdates","hasPending","oldLength","idCounter","pendingSources","bind","modules","getAPIModule","setAPIModule","getAPIConfig","setAPIConfig","createConfig","path","maxURL","configStorage","fallBackAPISources","fallBackAPI","customConfig","getProviders","listToIcons","api","API","getRedundancyCache","emptyCallback","pendingIcons","iconsToLoad","loaderFlags","queueFlags","redundancyCache","redundancy$1","cachedReundancy","loadedNewIcons","providerLoaderFlags","errorsCache","loadNewIcons","time","console","providerIconsToLoad","providerQueueFlags","providerPendingIcons","params","prepare","send","cache","isPending","loadIcons","cleanedIcons","sortedIcons","callCallback","newIcons","lastProvider","lastPrefix","providerNewIcons","pendingQueue","functions$1","APIInternalFunctions","APIFunctions","addAPIProvider","getAPI","jsonp","rootVar","endPoint","maxLengthCache","pathCache","hash","total","i","charCodeAt","getGlobal","globalRoot","self","extraPrefix","iconifyRoot","cb","calculateMaxLength","maxHostLength","host","max","extraLength","cacheKey","results","maxLength","iconsList","cbPrefix","global","cbCounter","callbackName","uri","script","document","createElement","type","async","src","head","appendChild","fetch_1","setFetch","fetchModule","fetch","then","response","json","catch","errno","browserStorage","storeCache","loadCache","mock","emptyList","count","cacheVersion","cachePrefix","countKey","versionKey","hour","cacheExpiration","local","session","_window","window","fakeWindow","setCount","setItem","getCount","getItem","parseInt","initCache","destroyCache","removeItem","minTime","load","func","valid","JSON","cached","version","store","stringify","functions","toggleBrowserCache","shorthand","alignmentFromString","flipFromString","separator","custom","flip","trim","align","rotateFromString","units","svgDefaults","inlineDefaults","render","ref","defaultProps","style","componentProps","color","localCounter","id$1","dangerouslySetInnerHTML","__html","verticalAlign","enableCache","disableCache","_api","Promise","nodeFetch","IconifyPreload","preload","e","IconifyProviders","IconComponent","Component","constructor","state","_abortLoading","_loading","_setData","setState","_checkIcon","changed","_icon","iconName","classes","onLoad","componentDidMount","componentDidUpdate","oldProps","componentWillUnmount","children","newProps","className","_inline","_ref","Icon","forwardRef","InlineIcon"],"sources":["D:/Softwares/react-simple-minimal/node_modules/@iconify/react/dist/iconify.esm.js"],"sourcesContent":["import React from 'react';\n\nfunction createCommonjsModule(fn) {\n  var module = { exports: {} };\n\treturn fn(module, module.exports), module.exports;\n}\n\nvar icon = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fullIcon = exports.iconDefaults = exports.minifyProps = exports.matchName = void 0;\n/**\n * Expression to test part of icon name.\n */\nexports.matchName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\n/**\n * Properties that can be minified\n *\n * Values of all these properties are awalys numbers\n */\nexports.minifyProps = [\n    // All IconifyDimenisons properties\n    'width',\n    'height',\n    'top',\n    'left',\n];\n/**\n * Default values for all optional IconifyIcon properties\n */\nexports.iconDefaults = Object.freeze({\n    left: 0,\n    top: 0,\n    width: 16,\n    height: 16,\n    rotate: 0,\n    vFlip: false,\n    hFlip: false,\n});\n/**\n * Add optional properties to icon\n */\nfunction fullIcon(data) {\n    return { ...exports.iconDefaults, ...data };\n}\nexports.fullIcon = fullIcon;\n});\n\nvar name = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateIcon = exports.stringToIcon = void 0;\n\n/**\n * Convert string to Icon object.\n */\nconst stringToIcon = (value, validate, allowSimpleName, provider = '') => {\n    const colonSeparated = value.split(':');\n    // Check for provider with correct '@' at start\n    if (value.slice(0, 1) === '@') {\n        // First part is provider\n        if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n            // \"@provider:prefix:name\" or \"@provider:prefix-name\"\n            return null;\n        }\n        provider = colonSeparated.shift().slice(1);\n    }\n    // Check split by colon: \"prefix:name\", \"provider:prefix:name\"\n    if (colonSeparated.length > 3 || !colonSeparated.length) {\n        return null;\n    }\n    if (colonSeparated.length > 1) {\n        // \"prefix:name\"\n        const name = colonSeparated.pop();\n        const prefix = colonSeparated.pop();\n        const result = {\n            // Allow provider without '@': \"provider:prefix:name\"\n            provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n            prefix,\n            name,\n        };\n        return validate && !exports.validateIcon(result) ? null : result;\n    }\n    // Attempt to split by dash: \"prefix-name\"\n    const name = colonSeparated[0];\n    const dashSeparated = name.split('-');\n    if (dashSeparated.length > 1) {\n        const result = {\n            provider: provider,\n            prefix: dashSeparated.shift(),\n            name: dashSeparated.join('-'),\n        };\n        return validate && !exports.validateIcon(result) ? null : result;\n    }\n    // If allowEmpty is set, allow empty provider and prefix, allowing names like \"home\"\n    if (allowSimpleName && provider === '') {\n        const result = {\n            provider: provider,\n            prefix: '',\n            name,\n        };\n        return validate && !exports.validateIcon(result, allowSimpleName)\n            ? null\n            : result;\n    }\n    return null;\n};\nexports.stringToIcon = stringToIcon;\n/**\n * Check if icon is valid.\n *\n * This function is not part of stringToIcon because validation is not needed for most code.\n */\nconst validateIcon = (icon$1, allowSimpleName) => {\n    if (!icon$1) {\n        return false;\n    }\n    return !!((icon$1.provider === '' || icon$1.provider.match(icon.matchName)) &&\n        ((allowSimpleName && icon$1.prefix === '') ||\n            icon$1.prefix.match(icon.matchName)) &&\n        icon$1.name.match(icon.matchName));\n};\nexports.validateIcon = validateIcon;\n});\n\nvar merge = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeIconData = void 0;\n\n/**\n * Merge icon and alias\n */\nfunction mergeIconData(icon$1, alias) {\n    const result = { ...icon$1 };\n    for (const key in icon.iconDefaults) {\n        const prop = key;\n        if (alias[prop] !== void 0) {\n            const value = alias[prop];\n            if (result[prop] === void 0) {\n                // Missing value\n                result[prop] = value;\n                continue;\n            }\n            switch (prop) {\n                case 'rotate':\n                    result[prop] =\n                        (result[prop] + value) % 4;\n                    break;\n                case 'hFlip':\n                case 'vFlip':\n                    result[prop] = value !== result[prop];\n                    break;\n                default:\n                    // Overwrite value\n                    result[prop] =\n                        value;\n            }\n        }\n    }\n    return result;\n}\nexports.mergeIconData = mergeIconData;\n});\n\nvar parse = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseIconSet = void 0;\n\n\n/**\n * Get list of defaults keys\n */\nconst defaultsKeys = Object.keys(icon.iconDefaults);\n/**\n * Resolve alias\n */\nfunction resolveAlias(alias, icons, aliases, level = 0) {\n    const parent = alias.parent;\n    if (icons[parent] !== void 0) {\n        return merge.mergeIconData(icons[parent], alias);\n    }\n    if (aliases[parent] !== void 0) {\n        if (level > 2) {\n            // icon + alias + alias + alias = too much nesting, possibly infinite\n            return null;\n        }\n        const icon = resolveAlias(aliases[parent], icons, aliases, level + 1);\n        if (icon) {\n            return merge.mergeIconData(icon, alias);\n        }\n    }\n    return null;\n}\n/**\n * Extract icons from an icon set\n */\nfunction parseIconSet(data, callback, list = 'none') {\n    const added = [];\n    // Must be an object\n    if (typeof data !== 'object') {\n        return list === 'none' ? false : added;\n    }\n    // Check for missing icons list returned by API\n    if (data.not_found instanceof Array) {\n        data.not_found.forEach((name) => {\n            callback(name, null);\n            if (list === 'all') {\n                added.push(name);\n            }\n        });\n    }\n    // Must have 'icons' object\n    if (typeof data.icons !== 'object') {\n        return list === 'none' ? false : added;\n    }\n    // Get default values\n    const defaults = Object.create(null);\n    defaultsKeys.forEach((key) => {\n        if (data[key] !== void 0 && typeof data[key] !== 'object') {\n            defaults[key] = data[key];\n        }\n    });\n    // Get icons\n    const icons = data.icons;\n    Object.keys(icons).forEach((name) => {\n        const icon$1 = icons[name];\n        if (typeof icon$1.body !== 'string') {\n            return;\n        }\n        // Freeze icon to make sure it will not be modified\n        callback(name, Object.freeze({ ...icon.iconDefaults, ...defaults, ...icon$1 }));\n        added.push(name);\n    });\n    // Get aliases\n    if (typeof data.aliases === 'object') {\n        const aliases = data.aliases;\n        Object.keys(aliases).forEach((name) => {\n            const icon$1 = resolveAlias(aliases[name], icons, aliases, 1);\n            if (icon$1) {\n                // Freeze icon to make sure it will not be modified\n                callback(name, Object.freeze({ ...icon.iconDefaults, ...defaults, ...icon$1 }));\n                added.push(name);\n            }\n        });\n    }\n    return list === 'none' ? added.length > 0 : added;\n}\nexports.parseIconSet = parseIconSet;\n});\n\nvar storage_1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.listIcons = exports.getIcon = exports.iconExists = exports.addIcon = exports.addIconSet = exports.getStorage = exports.newStorage = void 0;\n\n\n/**\n * Storage by provider and prefix\n */\nconst storage = Object.create(null);\n/**\n * Create new storage\n */\nfunction newStorage(provider, prefix) {\n    return {\n        provider,\n        prefix,\n        icons: Object.create(null),\n        missing: Object.create(null),\n    };\n}\nexports.newStorage = newStorage;\n/**\n * Get storage for provider and prefix\n */\nfunction getStorage(provider, prefix) {\n    if (storage[provider] === void 0) {\n        storage[provider] = Object.create(null);\n    }\n    const providerStorage = storage[provider];\n    if (providerStorage[prefix] === void 0) {\n        providerStorage[prefix] = newStorage(provider, prefix);\n    }\n    return providerStorage[prefix];\n}\nexports.getStorage = getStorage;\n/**\n * Add icon set to storage\n *\n * Returns array of added icons if 'list' is true and icons were added successfully\n */\nfunction addIconSet(storage, data, list = 'none') {\n    const t = Date.now();\n    return parse.parseIconSet(data, (name, icon) => {\n        if (icon === null) {\n            storage.missing[name] = t;\n        }\n        else {\n            storage.icons[name] = icon;\n        }\n    }, list);\n}\nexports.addIconSet = addIconSet;\n/**\n * Add icon to storage\n */\nfunction addIcon(storage, name, icon$1) {\n    try {\n        if (typeof icon$1.body === 'string') {\n            // Freeze icon to make sure it will not be modified\n            storage.icons[name] = Object.freeze(icon.fullIcon(icon$1));\n            return true;\n        }\n    }\n    catch (err) {\n        // Do nothing\n    }\n    return false;\n}\nexports.addIcon = addIcon;\n/**\n * Check if icon exists\n */\nfunction iconExists(storage, name) {\n    return storage.icons[name] !== void 0;\n}\nexports.iconExists = iconExists;\n/**\n * Get icon data\n */\nfunction getIcon(storage, name) {\n    const value = storage.icons[name];\n    return value === void 0 ? null : value;\n}\nexports.getIcon = getIcon;\n/**\n * List available icons\n */\nfunction listIcons(provider, prefix) {\n    let allIcons = [];\n    // Get providers\n    let providers;\n    if (typeof provider === 'string') {\n        providers = [provider];\n    }\n    else {\n        providers = Object.keys(storage);\n    }\n    // Get all icons\n    providers.forEach((provider) => {\n        let prefixes;\n        if (typeof provider === 'string' && typeof prefix === 'string') {\n            prefixes = [prefix];\n        }\n        else {\n            prefixes =\n                storage[provider] === void 0\n                    ? []\n                    : Object.keys(storage[provider]);\n        }\n        prefixes.forEach((prefix) => {\n            const storage = getStorage(provider, prefix);\n            const icons = Object.keys(storage.icons).map((name) => (provider !== '' ? '@' + provider + ':' : '') +\n                prefix +\n                ':' +\n                name);\n            allIcons = allIcons.concat(icons);\n        });\n    });\n    return allIcons;\n}\nexports.listIcons = listIcons;\n});\n\nvar functions$3 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storageFunctions = exports.addCollection = exports.addIcon = exports.getIconData = exports.allowSimpleNames = void 0;\n\n\n\n/**\n * Allow storing icons without provider or prefix, making it possible to store icons like \"home\"\n */\nlet simpleNames = false;\nfunction allowSimpleNames(allow) {\n    if (typeof allow === 'boolean') {\n        simpleNames = allow;\n    }\n    return simpleNames;\n}\nexports.allowSimpleNames = allowSimpleNames;\n/**\n * Get icon data\n */\nfunction getIconData(name$1) {\n    const icon = typeof name$1 === 'string' ? name.stringToIcon(name$1, true, simpleNames) : name$1;\n    return icon\n        ? storage_1.getIcon(storage_1.getStorage(icon.provider, icon.prefix), icon.name)\n        : null;\n}\nexports.getIconData = getIconData;\n/**\n * Add one icon\n */\nfunction addIcon(name$1, data) {\n    const icon = name.stringToIcon(name$1, true, simpleNames);\n    if (!icon) {\n        return false;\n    }\n    const storage = storage_1.getStorage(icon.provider, icon.prefix);\n    return storage_1.addIcon(storage, icon.name, data);\n}\nexports.addIcon = addIcon;\n/**\n * Add icon set\n */\nfunction addCollection(data, provider) {\n    if (typeof data !== 'object') {\n        return false;\n    }\n    // Get provider\n    if (typeof provider !== 'string') {\n        provider = typeof data.provider === 'string' ? data.provider : '';\n    }\n    // Check for simple names: requires empty provider and prefix\n    if (simpleNames &&\n        provider === '' &&\n        (typeof data.prefix !== 'string' || data.prefix === '')) {\n        // Simple names: add icons one by one\n        let added = false;\n        parse.parseIconSet(data, (name, icon) => {\n            if (icon !== null && addIcon(name, icon)) {\n                added = true;\n            }\n        });\n        return added;\n    }\n    // Validate provider and prefix\n    if (typeof data.prefix !== 'string' ||\n        !name.validateIcon({\n            provider,\n            prefix: data.prefix,\n            name: 'a',\n        })) {\n        return false;\n    }\n    const storage = storage_1.getStorage(provider, data.prefix);\n    return !!storage_1.addIconSet(storage, data);\n}\nexports.addCollection = addCollection;\n/**\n * Export\n */\nexports.storageFunctions = {\n    // Check if icon exists\n    iconExists: (name) => getIconData(name) !== null,\n    // Get raw icon data\n    getIcon: (name) => {\n        const result = getIconData(name);\n        return result ? { ...result } : null;\n    },\n    // List icons\n    listIcons: storage_1.listIcons,\n    // Add icon\n    addIcon,\n    // Add icon set\n    addCollection,\n};\n});\n\nvar id = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.replaceIDs = void 0;\n/**\n * Regular expression for finding ids\n */\nconst regex = /\\sid=\"(\\S+)\"/g;\n/**\n * Match for allowed characters before and after id in replacement, including () for group\n */\nconst replaceValue = '([^A-Za-z0-9_-])';\n/**\n * Escape value for 'new RegExp()'\n */\nfunction escapeRegExp(str) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n/**\n * New random-ish prefix for ids\n */\nconst randomPrefix = 'IconifyId-' +\n    Date.now().toString(16) +\n    '-' +\n    ((Math.random() * 0x1000000) | 0).toString(16) +\n    '-';\n/**\n * Counter for ids, increasing with every replacement\n */\nlet counter = 0;\n/**\n * Replace IDs in SVG output with unique IDs\n * Fast replacement without parsing XML, assuming commonly used patterns and clean XML (icon should have been cleaned up with Iconify Tools or SVGO).\n */\nfunction replaceIDs(body, prefix = randomPrefix) {\n    // Find all IDs\n    const ids = [];\n    let match;\n    while ((match = regex.exec(body))) {\n        ids.push(match[1]);\n    }\n    if (!ids.length) {\n        return body;\n    }\n    // Replace with unique ids\n    ids.forEach((id) => {\n        const newID = typeof prefix === 'function' ? prefix() : prefix + counter++;\n        body = body.replace(new RegExp(replaceValue + '(' + escapeRegExp(id) + ')' + replaceValue, 'g'), '$1' + newID + '$3');\n    });\n    return body;\n}\nexports.replaceIDs = replaceIDs;\n});\n\nvar size = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculateSize = void 0;\n/**\n * Regular expressions for calculating dimensions\n */\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\n/**\n * Calculate second dimension when only 1 dimension is set\n *\n * @param {string|number} size One dimension (such as width)\n * @param {number} ratio Width/height ratio.\n *      If size is width, ratio = height/width\n *      If size is height, ratio = width/height\n * @param {number} [precision] Floating number precision in result to minimize output. Default = 2\n * @return {string|number} Another dimension\n */\nfunction calculateSize(size, ratio, precision) {\n    if (ratio === 1) {\n        return size;\n    }\n    precision = precision === void 0 ? 100 : precision;\n    if (typeof size === 'number') {\n        return Math.ceil(size * ratio * precision) / precision;\n    }\n    if (typeof size !== 'string') {\n        return size;\n    }\n    // Split code into sets of strings and numbers\n    const oldParts = size.split(unitsSplit);\n    if (oldParts === null || !oldParts.length) {\n        return size;\n    }\n    const newParts = [];\n    let code = oldParts.shift();\n    let isNumber = unitsTest.test(code);\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        if (isNumber) {\n            const num = parseFloat(code);\n            if (isNaN(num)) {\n                newParts.push(code);\n            }\n            else {\n                newParts.push(Math.ceil(num * ratio * precision) / precision);\n            }\n        }\n        else {\n            newParts.push(code);\n        }\n        // next\n        code = oldParts.shift();\n        if (code === void 0) {\n            return newParts.join('');\n        }\n        isNumber = !isNumber;\n    }\n}\nexports.calculateSize = calculateSize;\n});\n\nvar customisations = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeCustomisations = exports.defaults = void 0;\n/**\n * Default icon customisations values\n */\nexports.defaults = Object.freeze({\n    // Display mode\n    inline: false,\n    // Dimensions\n    width: null,\n    height: null,\n    // Alignment\n    hAlign: 'center',\n    vAlign: 'middle',\n    slice: false,\n    // Transformations\n    hFlip: false,\n    vFlip: false,\n    rotate: 0,\n});\n/**\n * Convert IconifyIconCustomisations to FullIconCustomisations\n */\nfunction mergeCustomisations(defaults, item) {\n    const result = {};\n    for (const key in defaults) {\n        const attr = key;\n        // Copy old value\n        result[attr] = defaults[attr];\n        if (item[attr] === void 0) {\n            continue;\n        }\n        // Validate new value\n        const value = item[attr];\n        switch (attr) {\n            // Boolean attributes that override old value\n            case 'inline':\n            case 'slice':\n                if (typeof value === 'boolean') {\n                    result[attr] = value;\n                }\n                break;\n            // Boolean attributes that are merged\n            case 'hFlip':\n            case 'vFlip':\n                if (value === true) {\n                    result[attr] = !result[attr];\n                }\n                break;\n            // Non-empty string\n            case 'hAlign':\n            case 'vAlign':\n                if (typeof value === 'string' && value !== '') {\n                    result[attr] = value;\n                }\n                break;\n            // Non-empty string / non-zero number / null\n            case 'width':\n            case 'height':\n                if ((typeof value === 'string' && value !== '') ||\n                    (typeof value === 'number' && value) ||\n                    value === null) {\n                    result[attr] = value;\n                }\n                break;\n            // Rotation\n            case 'rotate':\n                if (typeof value === 'number') {\n                    result[attr] += value;\n                }\n                break;\n        }\n    }\n    return result;\n}\nexports.mergeCustomisations = mergeCustomisations;\n});\n\nvar build = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.iconToSVG = void 0;\n\n/**\n * Get preserveAspectRatio value\n */\nfunction preserveAspectRatio(props) {\n    let result = '';\n    switch (props.hAlign) {\n        case 'left':\n            result += 'xMin';\n            break;\n        case 'right':\n            result += 'xMax';\n            break;\n        default:\n            result += 'xMid';\n    }\n    switch (props.vAlign) {\n        case 'top':\n            result += 'YMin';\n            break;\n        case 'bottom':\n            result += 'YMax';\n            break;\n        default:\n            result += 'YMid';\n    }\n    result += props.slice ? ' slice' : ' meet';\n    return result;\n}\n/**\n * Get SVG attributes and content from icon + customisations\n *\n * Does not generate style to make it compatible with frameworks that use objects for style, such as React.\n * Instead, it generates 'inline' value. If true, rendering engine should add verticalAlign: -0.125em to icon.\n *\n * Customisations should be normalised by platform specific parser.\n * Result should be converted to <svg> by platform specific parser.\n * Use replaceIDs to generate unique IDs for body.\n */\nfunction iconToSVG(icon, customisations) {\n    // viewBox\n    const box = {\n        left: icon.left,\n        top: icon.top,\n        width: icon.width,\n        height: icon.height,\n    };\n    // Body\n    let body = icon.body;\n    // Apply transformations\n    [icon, customisations].forEach((props) => {\n        const transformations = [];\n        const hFlip = props.hFlip;\n        const vFlip = props.vFlip;\n        let rotation = props.rotate;\n        // Icon is flipped first, then rotated\n        if (hFlip) {\n            if (vFlip) {\n                rotation += 2;\n            }\n            else {\n                // Horizontal flip\n                transformations.push('translate(' +\n                    (box.width + box.left) +\n                    ' ' +\n                    (0 - box.top) +\n                    ')');\n                transformations.push('scale(-1 1)');\n                box.top = box.left = 0;\n            }\n        }\n        else if (vFlip) {\n            // Vertical flip\n            transformations.push('translate(' +\n                (0 - box.left) +\n                ' ' +\n                (box.height + box.top) +\n                ')');\n            transformations.push('scale(1 -1)');\n            box.top = box.left = 0;\n        }\n        let tempValue;\n        if (rotation < 0) {\n            rotation -= Math.floor(rotation / 4) * 4;\n        }\n        rotation = rotation % 4;\n        switch (rotation) {\n            case 1:\n                // 90deg\n                tempValue = box.height / 2 + box.top;\n                transformations.unshift('rotate(90 ' + tempValue + ' ' + tempValue + ')');\n                break;\n            case 2:\n                // 180deg\n                transformations.unshift('rotate(180 ' +\n                    (box.width / 2 + box.left) +\n                    ' ' +\n                    (box.height / 2 + box.top) +\n                    ')');\n                break;\n            case 3:\n                // 270deg\n                tempValue = box.width / 2 + box.left;\n                transformations.unshift('rotate(-90 ' + tempValue + ' ' + tempValue + ')');\n                break;\n        }\n        if (rotation % 2 === 1) {\n            // Swap width/height and x/y for 90deg or 270deg rotation\n            if (box.left !== 0 || box.top !== 0) {\n                tempValue = box.left;\n                box.left = box.top;\n                box.top = tempValue;\n            }\n            if (box.width !== box.height) {\n                tempValue = box.width;\n                box.width = box.height;\n                box.height = tempValue;\n            }\n        }\n        if (transformations.length) {\n            body =\n                '<g transform=\"' +\n                    transformations.join(' ') +\n                    '\">' +\n                    body +\n                    '</g>';\n        }\n    });\n    // Calculate dimensions\n    let width, height;\n    if (customisations.width === null && customisations.height === null) {\n        // Set height to '1em', calculate width\n        height = '1em';\n        width = size.calculateSize(height, box.width / box.height);\n    }\n    else if (customisations.width !== null &&\n        customisations.height !== null) {\n        // Values are set\n        width = customisations.width;\n        height = customisations.height;\n    }\n    else if (customisations.height !== null) {\n        // Height is set\n        height = customisations.height;\n        width = size.calculateSize(height, box.width / box.height);\n    }\n    else {\n        // Width is set\n        width = customisations.width;\n        height = size.calculateSize(width, box.height / box.width);\n    }\n    // Check for 'auto'\n    if (width === 'auto') {\n        width = box.width;\n    }\n    if (height === 'auto') {\n        height = box.height;\n    }\n    // Convert to string\n    width = typeof width === 'string' ? width : width + '';\n    height = typeof height === 'string' ? height : height + '';\n    // Result\n    const result = {\n        attributes: {\n            width,\n            height,\n            preserveAspectRatio: preserveAspectRatio(customisations),\n            viewBox: box.left + ' ' + box.top + ' ' + box.width + ' ' + box.height,\n        },\n        body,\n    };\n    if (customisations.inline) {\n        result.inline = true;\n    }\n    return result;\n}\nexports.iconToSVG = iconToSVG;\n});\n\nvar functions$2 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.builderFunctions = void 0;\n\n\n\n\n\n/**\n * Exported builder functions\n */\nexports.builderFunctions = {\n    replaceIDs: id.replaceIDs,\n    calculateSize: size.calculateSize,\n    buildIcon: (icon$1, customisations$1) => {\n        return build.iconToSVG(icon.fullIcon(icon$1), customisations.mergeCustomisations(customisations.defaults, customisations$1));\n    },\n};\n});\n\nvar modules$1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.coreModules = void 0;\nexports.coreModules = {};\n});\n\nvar config$1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultConfig = void 0;\n/**\n * Default RedundancyConfig for API calls\n */\nexports.defaultConfig = {\n    resources: [],\n    index: 0,\n    timeout: 2000,\n    rotate: 750,\n    random: false,\n    dataAfterTimeout: false,\n};\n});\n\nvar query = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sendQuery = void 0;\n/**\n * Send query\n */\nfunction sendQuery(config, payload, query, done, success) {\n    // Get number of resources\n    const resourcesCount = config.resources.length;\n    // Save start index\n    const startIndex = config.random\n        ? Math.floor(Math.random() * resourcesCount)\n        : config.index;\n    // Get resources\n    let resources;\n    if (config.random) {\n        // Randomise array\n        let list = config.resources.slice(0);\n        resources = [];\n        while (list.length > 1) {\n            const nextIndex = Math.floor(Math.random() * list.length);\n            resources.push(list[nextIndex]);\n            list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n        }\n        resources = resources.concat(list);\n    }\n    else {\n        // Rearrange resources to start with startIndex\n        resources = config.resources\n            .slice(startIndex)\n            .concat(config.resources.slice(0, startIndex));\n    }\n    // Counters, status\n    const startTime = Date.now();\n    let status = 'pending';\n    let queriesSent = 0;\n    let lastError = void 0;\n    // Timer\n    let timer = null;\n    // Execution queue\n    let queue = [];\n    // Callbacks to call when query is complete\n    let doneCallbacks = [];\n    if (typeof done === 'function') {\n        doneCallbacks.push(done);\n    }\n    /**\n     * Reset timer\n     */\n    function resetTimer() {\n        if (timer) {\n            clearTimeout(timer);\n            timer = null;\n        }\n    }\n    /**\n     * Abort everything\n     */\n    function abort() {\n        // Change status\n        if (status === 'pending') {\n            status = 'aborted';\n        }\n        // Reset timer\n        resetTimer();\n        // Abort all queued items\n        queue.forEach((item) => {\n            if (item.abort) {\n                item.abort();\n            }\n            if (item.status === 'pending') {\n                item.status = 'aborted';\n            }\n        });\n        queue = [];\n    }\n    /**\n     * Add / replace callback to call when execution is complete.\n     * This can be used to abort pending query implementations when query is complete or aborted.\n     */\n    function subscribe(callback, overwrite) {\n        if (overwrite) {\n            doneCallbacks = [];\n        }\n        if (typeof callback === 'function') {\n            doneCallbacks.push(callback);\n        }\n    }\n    /**\n     * Get query status\n     */\n    function getQueryStatus() {\n        return {\n            startTime,\n            payload,\n            status,\n            queriesSent,\n            queriesPending: queue.length,\n            subscribe,\n            abort,\n        };\n    }\n    /**\n     * Fail query\n     */\n    function failQuery() {\n        status = 'failed';\n        // Send notice to all callbacks\n        doneCallbacks.forEach((callback) => {\n            callback(void 0, lastError);\n        });\n    }\n    /**\n     * Clear queue\n     */\n    function clearQueue() {\n        queue = queue.filter((item) => {\n            if (item.status === 'pending') {\n                item.status = 'aborted';\n            }\n            if (item.abort) {\n                item.abort();\n            }\n            return false;\n        });\n    }\n    /**\n     * Got response from module\n     */\n    function moduleResponse(item, data, error) {\n        const isError = data === void 0;\n        // Remove item from queue\n        queue = queue.filter((queued) => queued !== item);\n        // Check status\n        switch (status) {\n            case 'pending':\n                // Pending\n                break;\n            case 'failed':\n                if (isError || !config.dataAfterTimeout) {\n                    // Query has already timed out or dataAfterTimeout is disabled\n                    return;\n                }\n                // Success after failure\n                break;\n            default:\n                // Aborted or completed\n                return;\n        }\n        // Error\n        if (isError) {\n            if (error !== void 0) {\n                lastError = error;\n            }\n            if (!queue.length) {\n                if (!resources.length) {\n                    // Nothing else queued, nothing can be queued\n                    failQuery();\n                }\n                else {\n                    // Queue is empty: run next item immediately\n                    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                    execNext();\n                }\n            }\n            return;\n        }\n        // Reset timers, abort pending queries\n        resetTimer();\n        clearQueue();\n        // Update index in Redundancy\n        if (success && !config.random) {\n            const index = config.resources.indexOf(item.resource);\n            if (index !== -1 && index !== config.index) {\n                success(index);\n            }\n        }\n        // Mark as completed and call callbacks\n        status = 'completed';\n        doneCallbacks.forEach((callback) => {\n            callback(data);\n        });\n    }\n    /**\n     * Execute next query\n     */\n    function execNext() {\n        // Check status\n        if (status !== 'pending') {\n            return;\n        }\n        // Reset timer\n        resetTimer();\n        // Get resource\n        const resource = resources.shift();\n        if (resource === void 0) {\n            // Nothing to execute: wait for final timeout before failing\n            if (queue.length) {\n                const timeout = typeof config.timeout === 'function'\n                    ? config.timeout(startTime)\n                    : config.timeout;\n                if (timeout) {\n                    // Last timeout before failing to allow late response\n                    timer = setTimeout(() => {\n                        resetTimer();\n                        if (status === 'pending') {\n                            // Clear queue\n                            clearQueue();\n                            failQuery();\n                        }\n                    }, timeout);\n                    return;\n                }\n            }\n            // Fail\n            failQuery();\n            return;\n        }\n        // Create new item\n        const item = {\n            getQueryStatus,\n            status: 'pending',\n            resource,\n            done: (data, error) => {\n                moduleResponse(item, data, error);\n            },\n        };\n        // Add to queue\n        queue.push(item);\n        // Bump next index\n        queriesSent++;\n        // Get timeout for next item\n        const timeout = typeof config.rotate === 'function'\n            ? config.rotate(queriesSent, startTime)\n            : config.rotate;\n        // Create timer\n        timer = setTimeout(execNext, timeout);\n        // Execute it\n        query(resource, payload, item);\n    }\n    // Execute first query on next tick\n    setTimeout(execNext);\n    // Return getQueryStatus()\n    return getQueryStatus;\n}\nexports.sendQuery = sendQuery;\n});\n\nvar redundancy = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initRedundancy = void 0;\n\n\n/**\n * Set configuration\n */\nfunction setConfig(config) {\n    if (typeof config !== 'object' ||\n        typeof config.resources !== 'object' ||\n        !(config.resources instanceof Array) ||\n        !config.resources.length) {\n        throw new Error('Invalid Reduncancy configuration');\n    }\n    const newConfig = Object.create(null);\n    let key;\n    for (key in config$1.defaultConfig) {\n        if (config[key] !== void 0) {\n            newConfig[key] = config[key];\n        }\n        else {\n            newConfig[key] = config$1.defaultConfig[key];\n        }\n    }\n    return newConfig;\n}\n/**\n * Redundancy instance\n */\nfunction initRedundancy(cfg) {\n    // Configuration\n    const config = setConfig(cfg);\n    // List of queries\n    let queries = [];\n    /**\n     * Remove aborted and completed queries\n     */\n    function cleanup() {\n        queries = queries.filter((item) => item().status === 'pending');\n    }\n    /**\n     * Send query\n     */\n    function query$1(payload, queryCallback, doneCallback) {\n        const query$1 = query.sendQuery(config, payload, queryCallback, (data, error) => {\n            // Remove query from list\n            cleanup();\n            // Call callback\n            if (doneCallback) {\n                doneCallback(data, error);\n            }\n        }, (newIndex) => {\n            // Update start index\n            config.index = newIndex;\n        });\n        queries.push(query$1);\n        return query$1;\n    }\n    /**\n     * Find instance\n     */\n    function find(callback) {\n        const result = queries.find((value) => {\n            return callback(value);\n        });\n        return result !== void 0 ? result : null;\n    }\n    // Create and return functions\n    const instance = {\n        query: query$1,\n        find,\n        setIndex: (index) => {\n            config.index = index;\n        },\n        getIndex: () => config.index,\n        cleanup,\n    };\n    return instance;\n}\nexports.initRedundancy = initRedundancy;\n});\n\nvar sort = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sortIcons = void 0;\n\n/**\n * Check if icons have been loaded\n */\nfunction sortIcons(icons) {\n    const result = {\n        loaded: [],\n        missing: [],\n        pending: [],\n    };\n    const storage = Object.create(null);\n    // Sort icons alphabetically to prevent duplicates and make sure they are sorted in API queries\n    icons.sort((a, b) => {\n        if (a.provider !== b.provider) {\n            return a.provider.localeCompare(b.provider);\n        }\n        if (a.prefix !== b.prefix) {\n            return a.prefix.localeCompare(b.prefix);\n        }\n        return a.name.localeCompare(b.name);\n    });\n    let lastIcon = {\n        provider: '',\n        prefix: '',\n        name: '',\n    };\n    icons.forEach((icon) => {\n        if (lastIcon.name === icon.name &&\n            lastIcon.prefix === icon.prefix &&\n            lastIcon.provider === icon.provider) {\n            return;\n        }\n        lastIcon = icon;\n        // Check icon\n        const provider = icon.provider;\n        const prefix = icon.prefix;\n        const name = icon.name;\n        if (storage[provider] === void 0) {\n            storage[provider] = Object.create(null);\n        }\n        const providerStorage = storage[provider];\n        if (providerStorage[prefix] === void 0) {\n            providerStorage[prefix] = storage_1.getStorage(provider, prefix);\n        }\n        const localStorage = providerStorage[prefix];\n        let list;\n        if (localStorage.icons[name] !== void 0) {\n            list = result.loaded;\n        }\n        else if (prefix === '' || localStorage.missing[name] !== void 0) {\n            // Mark icons without prefix as missing because they cannot be loaded from API\n            list = result.missing;\n        }\n        else {\n            list = result.pending;\n        }\n        const item = {\n            provider,\n            prefix,\n            name,\n        };\n        list.push(item);\n    });\n    return result;\n}\nexports.sortIcons = sortIcons;\n});\n\nvar callbacks = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeCallback = exports.updateCallbacks = exports.callbacks = void 0;\n\n// Records sorted by provider and prefix\n// This export is only for unit testing, should not be used\nexports.callbacks = Object.create(null);\nconst pendingUpdates = Object.create(null);\n/**\n * Remove callback\n */\nfunction removeCallback(sources, id) {\n    sources.forEach((source) => {\n        const provider = source.provider;\n        if (exports.callbacks[provider] === void 0) {\n            return;\n        }\n        const providerCallbacks = exports.callbacks[provider];\n        const prefix = source.prefix;\n        const items = providerCallbacks[prefix];\n        if (items) {\n            providerCallbacks[prefix] = items.filter((row) => row.id !== id);\n        }\n    });\n}\n/**\n * Update all callbacks for provider and prefix\n */\nfunction updateCallbacks(provider, prefix) {\n    if (pendingUpdates[provider] === void 0) {\n        pendingUpdates[provider] = Object.create(null);\n    }\n    const providerPendingUpdates = pendingUpdates[provider];\n    if (!providerPendingUpdates[prefix]) {\n        providerPendingUpdates[prefix] = true;\n        setTimeout(() => {\n            providerPendingUpdates[prefix] = false;\n            if (exports.callbacks[provider] === void 0 ||\n                exports.callbacks[provider][prefix] === void 0) {\n                return;\n            }\n            // Get all items\n            const items = exports.callbacks[provider][prefix].slice(0);\n            if (!items.length) {\n                return;\n            }\n            const storage = storage_1.getStorage(provider, prefix);\n            // Check each item for changes\n            let hasPending = false;\n            items.forEach((item) => {\n                const icons = item.icons;\n                const oldLength = icons.pending.length;\n                icons.pending = icons.pending.filter((icon) => {\n                    if (icon.prefix !== prefix) {\n                        // Checking only current prefix\n                        return true;\n                    }\n                    const name = icon.name;\n                    if (storage.icons[name] !== void 0) {\n                        // Loaded\n                        icons.loaded.push({\n                            provider,\n                            prefix,\n                            name,\n                        });\n                    }\n                    else if (storage.missing[name] !== void 0) {\n                        // Missing\n                        icons.missing.push({\n                            provider,\n                            prefix,\n                            name,\n                        });\n                    }\n                    else {\n                        // Pending\n                        hasPending = true;\n                        return true;\n                    }\n                    return false;\n                });\n                // Changes detected - call callback\n                if (icons.pending.length !== oldLength) {\n                    if (!hasPending) {\n                        // All icons have been loaded - remove callback from prefix\n                        removeCallback([\n                            {\n                                provider,\n                                prefix,\n                            },\n                        ], item.id);\n                    }\n                    item.callback(icons.loaded.slice(0), icons.missing.slice(0), icons.pending.slice(0), item.abort);\n                }\n            });\n        });\n    }\n}\nexports.updateCallbacks = updateCallbacks;\n/**\n * Unique id counter for callbacks\n */\nlet idCounter = 0;\n/**\n * Add callback\n */\nfunction storeCallback(callback, icons, pendingSources) {\n    // Create unique id and abort function\n    const id = idCounter++;\n    const abort = removeCallback.bind(null, pendingSources, id);\n    if (!icons.pending.length) {\n        // Do not store item without pending icons and return function that does nothing\n        return abort;\n    }\n    // Create item and store it for all pending prefixes\n    const item = {\n        id,\n        icons,\n        callback,\n        abort: abort,\n    };\n    pendingSources.forEach((source) => {\n        const provider = source.provider;\n        const prefix = source.prefix;\n        if (exports.callbacks[provider] === void 0) {\n            exports.callbacks[provider] = Object.create(null);\n        }\n        const providerCallbacks = exports.callbacks[provider];\n        if (providerCallbacks[prefix] === void 0) {\n            providerCallbacks[prefix] = [];\n        }\n        providerCallbacks[prefix].push(item);\n    });\n    return abort;\n}\nexports.storeCallback = storeCallback;\n});\n\nvar modules = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAPIModule = exports.setAPIModule = void 0;\n/**\n * Local storate types and entries\n */\nconst storage = Object.create(null);\n/**\n * Set API module\n */\nfunction setAPIModule(provider, item) {\n    storage[provider] = item;\n}\nexports.setAPIModule = setAPIModule;\n/**\n * Get API module\n */\nfunction getAPIModule(provider) {\n    return storage[provider] === void 0 ? storage[''] : storage[provider];\n}\nexports.getAPIModule = getAPIModule;\n});\n\nvar config = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAPIConfig = exports.setAPIConfig = void 0;\n/**\n * Create full API configuration from partial data\n */\nfunction createConfig(source) {\n    let resources;\n    if (typeof source.resources === 'string') {\n        resources = [source.resources];\n    }\n    else {\n        resources = source.resources;\n        if (!(resources instanceof Array) || !resources.length) {\n            return null;\n        }\n    }\n    const result = {\n        // API hosts\n        resources: resources,\n        // Root path\n        path: source.path === void 0 ? '/' : source.path,\n        // URL length limit\n        maxURL: source.maxURL ? source.maxURL : 500,\n        // Timeout before next host is used.\n        rotate: source.rotate ? source.rotate : 750,\n        // Timeout before failing query.\n        timeout: source.timeout ? source.timeout : 5000,\n        // Randomise default API end point.\n        random: source.random === true,\n        // Start index\n        index: source.index ? source.index : 0,\n        // Receive data after time out (used if time out kicks in first, then API module sends data anyway).\n        dataAfterTimeout: source.dataAfterTimeout !== false,\n    };\n    return result;\n}\n/**\n * Local storage\n */\nconst configStorage = Object.create(null);\n/**\n * Redundancy for API servers.\n *\n * API should have very high uptime because of implemented redundancy at server level, but\n * sometimes bad things happen. On internet 100% uptime is not possible.\n *\n * There could be routing problems. Server might go down for whatever reason, but it takes\n * few minutes to detect that downtime, so during those few minutes API might not be accessible.\n *\n * This script has some redundancy to mitigate possible network issues.\n *\n * If one host cannot be reached in 'rotate' (750 by default) ms, script will try to retrieve\n * data from different host. Hosts have different configurations, pointing to different\n * API servers hosted at different providers.\n */\nconst fallBackAPISources = [\n    'https://api.simplesvg.com',\n    'https://api.unisvg.com',\n];\n// Shuffle fallback API\nconst fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) {\n    if (fallBackAPISources.length === 1) {\n        fallBackAPI.push(fallBackAPISources.shift());\n    }\n    else {\n        // Get first or last item\n        if (Math.random() > 0.5) {\n            fallBackAPI.push(fallBackAPISources.shift());\n        }\n        else {\n            fallBackAPI.push(fallBackAPISources.pop());\n        }\n    }\n}\n// Add default API\nconfigStorage[''] = createConfig({\n    resources: ['https://api.iconify.design'].concat(fallBackAPI),\n});\n/**\n * Add custom config for provider\n */\nfunction setAPIConfig(provider, customConfig) {\n    const config = createConfig(customConfig);\n    if (config === null) {\n        return false;\n    }\n    configStorage[provider] = config;\n    return true;\n}\nexports.setAPIConfig = setAPIConfig;\n/**\n * Get API configuration\n */\nconst getAPIConfig = (provider) => configStorage[provider];\nexports.getAPIConfig = getAPIConfig;\n});\n\nvar list = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getProviders = exports.listToIcons = void 0;\n\n/**\n * Convert icons list from string/icon mix to icons and validate them\n */\nfunction listToIcons(list, validate = true, simpleNames = false) {\n    const result = [];\n    list.forEach((item) => {\n        const icon = typeof item === 'string'\n            ? name.stringToIcon(item, false, simpleNames)\n            : item;\n        if (!validate || name.validateIcon(icon, simpleNames)) {\n            result.push({\n                provider: icon.provider,\n                prefix: icon.prefix,\n                name: icon.name,\n            });\n        }\n    });\n    return result;\n}\nexports.listToIcons = listToIcons;\n/**\n * Get all providers\n */\nfunction getProviders(list) {\n    const providers = Object.create(null);\n    list.forEach((icon) => {\n        providers[icon.provider] = true;\n    });\n    return Object.keys(providers);\n}\nexports.getProviders = getProviders;\n});\n\nvar api = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.API = exports.getRedundancyCache = void 0;\n\n\n\n\n\n\n\n\n\n// Empty abort callback for loadIcons()\nfunction emptyCallback() {\n    // Do nothing\n}\nconst pendingIcons = Object.create(null);\n/**\n * List of icons that are waiting to be loaded.\n *\n * List is passed to API module, then cleared.\n *\n * This list should not be used for any checks, use pendingIcons to check\n * if icons is being loaded.\n *\n * [provider][prefix] = array of icon names\n */\nconst iconsToLoad = Object.create(null);\n// Flags to merge multiple synchronous icon requests in one asynchronous request\nconst loaderFlags = Object.create(null);\nconst queueFlags = Object.create(null);\nconst redundancyCache = Object.create(null);\n/**\n * Get Redundancy instance for provider\n */\nfunction getRedundancyCache(provider) {\n    if (redundancyCache[provider] === void 0) {\n        const config$1 = config.getAPIConfig(provider);\n        if (!config$1) {\n            // No way to load icons because configuration is not set!\n            return;\n        }\n        const redundancy$1 = redundancy.initRedundancy(config$1);\n        const cachedReundancy = {\n            config: config$1,\n            redundancy: redundancy$1,\n        };\n        redundancyCache[provider] = cachedReundancy;\n    }\n    return redundancyCache[provider];\n}\nexports.getRedundancyCache = getRedundancyCache;\n/**\n * Function called when new icons have been loaded\n */\nfunction loadedNewIcons(provider, prefix) {\n    // Run only once per tick, possibly joining multiple API responses in one call\n    if (loaderFlags[provider] === void 0) {\n        loaderFlags[provider] = Object.create(null);\n    }\n    const providerLoaderFlags = loaderFlags[provider];\n    if (!providerLoaderFlags[prefix]) {\n        providerLoaderFlags[prefix] = true;\n        setTimeout(() => {\n            providerLoaderFlags[prefix] = false;\n            callbacks.updateCallbacks(provider, prefix);\n        });\n    }\n}\n// Storage for errors for loadNewIcons(). Used to avoid spamming log with identical errors.\nconst errorsCache = Object.create(null);\n/**\n * Load icons\n */\nfunction loadNewIcons(provider, prefix, icons) {\n    function err() {\n        const key = (provider === '' ? '' : '@' + provider + ':') + prefix;\n        const time = Math.floor(Date.now() / 60000); // log once in a minute\n        if (errorsCache[key] < time) {\n            errorsCache[key] = time;\n            console.error('Unable to retrieve icons for \"' +\n                key +\n                '\" because API is not configured properly.');\n        }\n    }\n    // Create nested objects if needed\n    if (iconsToLoad[provider] === void 0) {\n        iconsToLoad[provider] = Object.create(null);\n    }\n    const providerIconsToLoad = iconsToLoad[provider];\n    if (queueFlags[provider] === void 0) {\n        queueFlags[provider] = Object.create(null);\n    }\n    const providerQueueFlags = queueFlags[provider];\n    if (pendingIcons[provider] === void 0) {\n        pendingIcons[provider] = Object.create(null);\n    }\n    const providerPendingIcons = pendingIcons[provider];\n    // Add icons to queue\n    if (providerIconsToLoad[prefix] === void 0) {\n        providerIconsToLoad[prefix] = icons;\n    }\n    else {\n        providerIconsToLoad[prefix] = providerIconsToLoad[prefix]\n            .concat(icons)\n            .sort();\n    }\n    // Redundancy item\n    let cachedReundancy;\n    // Trigger update on next tick, mering multiple synchronous requests into one asynchronous request\n    if (!providerQueueFlags[prefix]) {\n        providerQueueFlags[prefix] = true;\n        setTimeout(() => {\n            providerQueueFlags[prefix] = false;\n            // Get icons and delete queue\n            const icons = providerIconsToLoad[prefix];\n            delete providerIconsToLoad[prefix];\n            // Get API module\n            const api = modules.getAPIModule(provider);\n            if (!api) {\n                // No way to load icons!\n                err();\n                return;\n            }\n            // Get API config and Redundancy instance\n            if (cachedReundancy === void 0) {\n                const redundancy = getRedundancyCache(provider);\n                if (redundancy === void 0) {\n                    // No way to load icons because configuration is not set!\n                    err();\n                    return;\n                }\n                cachedReundancy = redundancy;\n            }\n            // Prepare parameters and run queries\n            const params = api.prepare(provider, prefix, icons);\n            params.forEach((item) => {\n                cachedReundancy.redundancy.query(item, api.send, (data, error) => {\n                    const storage = storage_1.getStorage(provider, prefix);\n                    // Check for error\n                    if (typeof data !== 'object') {\n                        if (error !== 404) {\n                            // Do not handle error unless it is 404\n                            return;\n                        }\n                        // Not found: mark as missing\n                        const t = Date.now();\n                        item.icons.forEach((name) => {\n                            storage.missing[name] = t;\n                        });\n                    }\n                    else {\n                        // Add icons to storage\n                        try {\n                            const added = storage_1.addIconSet(storage, data, 'all');\n                            if (typeof added === 'boolean') {\n                                return;\n                            }\n                            // Remove added icons from pending list\n                            const pending = providerPendingIcons[prefix];\n                            added.forEach((name) => {\n                                delete pending[name];\n                            });\n                            // Cache API response\n                            if (modules$1.coreModules.cache) {\n                                modules$1.coreModules.cache(provider, data);\n                            }\n                        }\n                        catch (err) {\n                            console.error(err);\n                        }\n                    }\n                    // Trigger update on next tick\n                    loadedNewIcons(provider, prefix);\n                });\n            });\n        });\n    }\n}\n/**\n * Check if icon is being loaded\n */\nconst isPending = (icon) => {\n    return (pendingIcons[icon.provider] !== void 0 &&\n        pendingIcons[icon.provider][icon.prefix] !== void 0 &&\n        pendingIcons[icon.provider][icon.prefix][icon.name] !== void 0);\n};\n/**\n * Load icons\n */\nconst loadIcons = (icons, callback) => {\n    // Clean up and copy icons list\n    const cleanedIcons = list.listToIcons(icons, true, functions$3.allowSimpleNames());\n    // Sort icons by missing/loaded/pending\n    // Pending means icon is either being requsted or is about to be requested\n    const sortedIcons = sort.sortIcons(cleanedIcons);\n    if (!sortedIcons.pending.length) {\n        // Nothing to load\n        let callCallback = true;\n        if (callback) {\n            setTimeout(() => {\n                if (callCallback) {\n                    callback(sortedIcons.loaded, sortedIcons.missing, sortedIcons.pending, emptyCallback);\n                }\n            });\n        }\n        return () => {\n            callCallback = false;\n        };\n    }\n    // Get all sources for pending icons\n    const newIcons = Object.create(null);\n    const sources = [];\n    let lastProvider, lastPrefix;\n    sortedIcons.pending.forEach((icon) => {\n        const provider = icon.provider;\n        const prefix = icon.prefix;\n        if (prefix === lastPrefix && provider === lastProvider) {\n            return;\n        }\n        lastProvider = provider;\n        lastPrefix = prefix;\n        sources.push({\n            provider,\n            prefix,\n        });\n        if (pendingIcons[provider] === void 0) {\n            pendingIcons[provider] = Object.create(null);\n        }\n        const providerPendingIcons = pendingIcons[provider];\n        if (providerPendingIcons[prefix] === void 0) {\n            providerPendingIcons[prefix] = Object.create(null);\n        }\n        if (newIcons[provider] === void 0) {\n            newIcons[provider] = Object.create(null);\n        }\n        const providerNewIcons = newIcons[provider];\n        if (providerNewIcons[prefix] === void 0) {\n            providerNewIcons[prefix] = [];\n        }\n    });\n    // List of new icons\n    const time = Date.now();\n    // Filter pending icons list: find icons that are not being loaded yet\n    // If icon was called before, it must exist in pendingIcons or storage, but because this\n    // function is called right after sortIcons() that checks storage, icon is definitely not in storage.\n    sortedIcons.pending.forEach((icon) => {\n        const provider = icon.provider;\n        const prefix = icon.prefix;\n        const name = icon.name;\n        const pendingQueue = pendingIcons[provider][prefix];\n        if (pendingQueue[name] === void 0) {\n            // New icon - add to pending queue to mark it as being loaded\n            pendingQueue[name] = time;\n            // Add it to new icons list to pass it to API module for loading\n            newIcons[provider][prefix].push(name);\n        }\n    });\n    // Load icons on next tick to make sure result is not returned before callback is stored and\n    // to consolidate multiple synchronous loadIcons() calls into one asynchronous API call\n    sources.forEach((source) => {\n        const provider = source.provider;\n        const prefix = source.prefix;\n        if (newIcons[provider][prefix].length) {\n            loadNewIcons(provider, prefix, newIcons[provider][prefix]);\n        }\n    });\n    // Store callback and return abort function\n    return callback\n        ? callbacks.storeCallback(callback, sortedIcons, sources)\n        : emptyCallback;\n};\n/**\n * Export module\n */\nexports.API = {\n    isPending,\n    loadIcons,\n};\n});\n\nvar functions$1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.APIInternalFunctions = exports.APIFunctions = void 0;\n\n\n\nexports.APIFunctions = {\n    loadIcons: api.API.loadIcons,\n    addAPIProvider: config.setAPIConfig,\n};\nexports.APIInternalFunctions = {\n    getAPI: api.getRedundancyCache,\n    getAPIConfig: config.getAPIConfig,\n    setAPIModule: modules.setAPIModule,\n};\n});\n\nvar jsonp = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAPIModule = void 0;\nlet rootVar = null;\n/**\n * Endpoint\n */\nlet endPoint = '{prefix}.js?icons={icons}&callback={callback}';\n/**\n * Cache: provider:prefix = value\n */\nconst maxLengthCache = Object.create(null);\nconst pathCache = Object.create(null);\n/**\n * Get hash for query\n *\n * Hash is used in JSONP callback name, so same queries end up with same JSONP callback,\n * allowing response to be cached in browser.\n */\nfunction hash(str) {\n    let total = 0, i;\n    for (i = str.length - 1; i >= 0; i--) {\n        total += str.charCodeAt(i);\n    }\n    return total % 999;\n}\n/**\n * Get root object\n */\nfunction getGlobal() {\n    // Create root\n    if (rootVar === null) {\n        // window\n        const globalRoot = self;\n        // Test for window.Iconify. If missing, create 'IconifyJSONP'\n        let prefix = 'Iconify';\n        let extraPrefix = '.cb';\n        if (globalRoot[prefix] === void 0) {\n            // Use 'IconifyJSONP' global\n            prefix = 'IconifyJSONP';\n            extraPrefix = '';\n            if (globalRoot[prefix] === void 0) {\n                globalRoot[prefix] = Object.create(null);\n            }\n            rootVar = globalRoot[prefix];\n        }\n        else {\n            // Use 'Iconify.cb'\n            const iconifyRoot = globalRoot[prefix];\n            if (iconifyRoot.cb === void 0) {\n                iconifyRoot.cb = Object.create(null);\n            }\n            rootVar = iconifyRoot.cb;\n        }\n        // Change end point\n        endPoint = endPoint.replace('{callback}', prefix + extraPrefix + '.{cb}');\n    }\n    return rootVar;\n}\n/**\n * Return API module\n */\nconst getAPIModule = (getAPIConfig) => {\n    /**\n     * Calculate maximum icons list length for prefix\n     */\n    function calculateMaxLength(provider, prefix) {\n        // Get config and store path\n        const config = getAPIConfig(provider);\n        if (!config) {\n            return 0;\n        }\n        // Calculate\n        let result;\n        if (!config.maxURL) {\n            result = 0;\n        }\n        else {\n            let maxHostLength = 0;\n            config.resources.forEach((item) => {\n                const host = item;\n                maxHostLength = Math.max(maxHostLength, host.length);\n            });\n            // Make sure global is set\n            getGlobal();\n            // Extra width: prefix (3) + counter (4) - '{cb}' (4)\n            const extraLength = 3;\n            // Get available length\n            result =\n                config.maxURL -\n                    maxHostLength -\n                    config.path.length -\n                    endPoint\n                        .replace('{provider}', provider)\n                        .replace('{prefix}', prefix)\n                        .replace('{icons}', '').length -\n                    extraLength;\n        }\n        // Cache stuff and return result\n        const cacheKey = provider + ':' + prefix;\n        pathCache[cacheKey] = config.path;\n        maxLengthCache[cacheKey] = result;\n        return result;\n    }\n    /**\n     * Prepare params\n     */\n    const prepare = (provider, prefix, icons) => {\n        const results = [];\n        // Get maximum icons list length\n        const cacheKey = provider + ':' + prefix;\n        let maxLength = maxLengthCache[cacheKey];\n        if (maxLength === void 0) {\n            maxLength = calculateMaxLength(provider, prefix);\n        }\n        // Split icons\n        let item = {\n            provider,\n            prefix,\n            icons: [],\n        };\n        let length = 0;\n        icons.forEach((name, index) => {\n            length += name.length + 1;\n            if (length >= maxLength && index > 0) {\n                // Next set\n                results.push(item);\n                item = {\n                    provider,\n                    prefix,\n                    icons: [],\n                };\n                length = name.length;\n            }\n            item.icons.push(name);\n        });\n        results.push(item);\n        return results;\n    };\n    /**\n     * Load icons\n     */\n    const send = (host, params, status) => {\n        const provider = params.provider;\n        const prefix = params.prefix;\n        const icons = params.icons;\n        const iconsList = icons.join(',');\n        const cacheKey = provider + ':' + prefix;\n        // Create callback prefix\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const cbPrefix = prefix.split('-').shift().slice(0, 3);\n        const global = getGlobal();\n        // Callback hash\n        let cbCounter = hash(provider + ':' + host + ':' + prefix + ':' + iconsList);\n        while (global[cbPrefix + cbCounter] !== void 0) {\n            cbCounter++;\n        }\n        const callbackName = cbPrefix + cbCounter;\n        const path = pathCache[cacheKey] +\n            endPoint\n                .replace('{provider}', provider)\n                .replace('{prefix}', prefix)\n                .replace('{icons}', iconsList)\n                .replace('{cb}', callbackName);\n        global[callbackName] = (data) => {\n            // Remove callback and complete query\n            delete global[callbackName];\n            status.done(data);\n        };\n        // Create URI\n        const uri = host + path;\n        // console.log('API query:', uri);\n        // Create script and append it to head\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.async = true;\n        script.src = uri;\n        document.head.appendChild(script);\n    };\n    // Return functions\n    return {\n        prepare,\n        send,\n    };\n};\nexports.getAPIModule = getAPIModule;\n});\n\nvar fetch_1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAPIModule = exports.setFetch = void 0;\n/**\n * Endpoint\n */\nconst endPoint = '{prefix}.json?icons={icons}';\n/**\n * Cache\n */\nconst maxLengthCache = Object.create(null);\nconst pathCache = Object.create(null);\n/**\n * Fetch function\n *\n * Use this to set 'cross-fetch' in node.js environment if you are retrieving icons on server side.\n * Not needed when using stuff like Next.js or SvelteKit because components use API only on client side.\n */\nlet fetchModule = null;\ntry {\n    fetchModule = fetch;\n}\ncatch (err) {\n    //\n}\nfunction setFetch(fetch) {\n    fetchModule = fetch;\n}\nexports.setFetch = setFetch;\n/**\n * Return API module\n */\nconst getAPIModule = (getAPIConfig) => {\n    /**\n     * Calculate maximum icons list length for prefix\n     */\n    function calculateMaxLength(provider, prefix) {\n        // Get config and store path\n        const config = getAPIConfig(provider);\n        if (!config) {\n            return 0;\n        }\n        // Calculate\n        let result;\n        if (!config.maxURL) {\n            result = 0;\n        }\n        else {\n            let maxHostLength = 0;\n            config.resources.forEach((item) => {\n                const host = item;\n                maxHostLength = Math.max(maxHostLength, host.length);\n            });\n            // Get available length\n            result =\n                config.maxURL -\n                    maxHostLength -\n                    config.path.length -\n                    endPoint\n                        .replace('{provider}', provider)\n                        .replace('{prefix}', prefix)\n                        .replace('{icons}', '').length;\n        }\n        // Cache stuff and return result\n        const cacheKey = provider + ':' + prefix;\n        pathCache[cacheKey] = config.path;\n        maxLengthCache[cacheKey] = result;\n        return result;\n    }\n    /**\n     * Prepare params\n     */\n    const prepare = (provider, prefix, icons) => {\n        const results = [];\n        // Get maximum icons list length\n        let maxLength = maxLengthCache[prefix];\n        if (maxLength === void 0) {\n            maxLength = calculateMaxLength(provider, prefix);\n        }\n        // Split icons\n        let item = {\n            provider,\n            prefix,\n            icons: [],\n        };\n        let length = 0;\n        icons.forEach((name, index) => {\n            length += name.length + 1;\n            if (length >= maxLength && index > 0) {\n                // Next set\n                results.push(item);\n                item = {\n                    provider,\n                    prefix,\n                    icons: [],\n                };\n                length = name.length;\n            }\n            item.icons.push(name);\n        });\n        results.push(item);\n        return results;\n    };\n    /**\n     * Load icons\n     */\n    const send = (host, params, status) => {\n        const provider = params.provider;\n        const prefix = params.prefix;\n        const icons = params.icons;\n        const iconsList = icons.join(',');\n        const cacheKey = provider + ':' + prefix;\n        const path = pathCache[cacheKey] +\n            endPoint\n                .replace('{provider}', provider)\n                .replace('{prefix}', prefix)\n                .replace('{icons}', iconsList);\n        if (!fetchModule) {\n            // Fail: return 424 Failed Dependency (its not meant to be used like that, but it is the best match)\n            status.done(void 0, 424);\n            return;\n        }\n        // console.log('API query:', host + path);\n        fetchModule(host + path)\n            .then((response) => {\n            if (response.status !== 200) {\n                status.done(void 0, response.status);\n                return;\n            }\n            return response.json();\n        })\n            .then((data) => {\n            if (typeof data !== 'object' || data === null) {\n                return;\n            }\n            // Store cache and complete\n            status.done(data);\n        })\n            .catch((err) => {\n            // Error\n            status.done(void 0, err.errno);\n        });\n    };\n    // Return functions\n    return {\n        prepare,\n        send,\n    };\n};\nexports.getAPIModule = getAPIModule;\n});\n\nvar browserStorage = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeCache = exports.loadCache = exports.mock = exports.emptyList = exports.count = exports.config = void 0;\n\n// After changing configuration change it in tests/*/fake_cache.ts\n// Cache version. Bump when structure changes\nconst cacheVersion = 'iconify2';\n// Cache keys\nconst cachePrefix = 'iconify';\nconst countKey = cachePrefix + '-count';\nconst versionKey = cachePrefix + '-version';\n/**\n * Cache expiration\n */\nconst hour = 3600000;\nconst cacheExpiration = 168; // In hours\n/**\n * Storage configuration\n */\nexports.config = {\n    local: true,\n    session: true,\n};\n/**\n * Flag to check if storage has been loaded\n */\nlet loaded = false;\n/**\n * Items counter\n */\nexports.count = {\n    local: 0,\n    session: 0,\n};\n/**\n * List of empty items\n */\nexports.emptyList = {\n    local: [],\n    session: [],\n};\nlet _window = typeof window === 'undefined' ? {} : window;\nfunction mock(fakeWindow) {\n    loaded = false;\n    _window = fakeWindow;\n}\nexports.mock = mock;\n/**\n * Get global\n *\n * @param key\n */\nfunction getGlobal(key) {\n    const attr = key + 'Storage';\n    try {\n        if (_window &&\n            _window[attr] &&\n            typeof _window[attr].length === 'number') {\n            return _window[attr];\n        }\n    }\n    catch (err) {\n        //\n    }\n    // Failed - mark as disabled\n    exports.config[key] = false;\n    return null;\n}\n/**\n * Change current count for storage\n */\nfunction setCount(storage, key, value) {\n    try {\n        storage.setItem(countKey, value + '');\n        exports.count[key] = value;\n        return true;\n    }\n    catch (err) {\n        return false;\n    }\n}\n/**\n * Get current count from storage\n *\n * @param storage\n */\nfunction getCount(storage) {\n    const count = storage.getItem(countKey);\n    if (count) {\n        const total = parseInt(count);\n        return total ? total : 0;\n    }\n    return 0;\n}\n/**\n * Initialize storage\n *\n * @param storage\n * @param key\n */\nfunction initCache(storage, key) {\n    try {\n        storage.setItem(versionKey, cacheVersion);\n    }\n    catch (err) {\n        //\n    }\n    setCount(storage, key, 0);\n}\n/**\n * Destroy old cache\n *\n * @param storage\n */\nfunction destroyCache(storage) {\n    try {\n        const total = getCount(storage);\n        for (let i = 0; i < total; i++) {\n            storage.removeItem(cachePrefix + i);\n        }\n    }\n    catch (err) {\n        //\n    }\n}\n/**\n * Load icons from cache\n */\nconst loadCache = () => {\n    if (loaded) {\n        return;\n    }\n    loaded = true;\n    // Minimum time\n    const minTime = Math.floor(Date.now() / hour) - cacheExpiration;\n    // Load data from storage\n    function load(key) {\n        const func = getGlobal(key);\n        if (!func) {\n            return;\n        }\n        // Get one item from storage\n        const getItem = (index) => {\n            const name = cachePrefix + index;\n            const item = func.getItem(name);\n            if (typeof item !== 'string') {\n                // Does not exist\n                return false;\n            }\n            // Get item, validate it\n            let valid = true;\n            try {\n                // Parse, check time stamp\n                const data = JSON.parse(item);\n                if (typeof data !== 'object' ||\n                    typeof data.cached !== 'number' ||\n                    data.cached < minTime ||\n                    typeof data.provider !== 'string' ||\n                    typeof data.data !== 'object' ||\n                    typeof data.data.prefix !== 'string') {\n                    valid = false;\n                }\n                else {\n                    // Add icon set\n                    const provider = data.provider;\n                    const prefix = data.data.prefix;\n                    const storage = storage_1.getStorage(provider, prefix);\n                    valid = storage_1.addIconSet(storage, data.data);\n                }\n            }\n            catch (err) {\n                valid = false;\n            }\n            if (!valid) {\n                func.removeItem(name);\n            }\n            return valid;\n        };\n        try {\n            // Get version\n            const version = func.getItem(versionKey);\n            if (version !== cacheVersion) {\n                if (version) {\n                    // Version is set, but invalid - remove old entries\n                    destroyCache(func);\n                }\n                // Empty data\n                initCache(func, key);\n                return;\n            }\n            // Get number of stored items\n            let total = getCount(func);\n            for (let i = total - 1; i >= 0; i--) {\n                if (!getItem(i)) {\n                    // Remove item\n                    if (i === total - 1) {\n                        // Last item - reduce country\n                        total--;\n                    }\n                    else {\n                        // Mark as empty\n                        exports.emptyList[key].push(i);\n                    }\n                }\n            }\n            // Update total\n            setCount(func, key, total);\n        }\n        catch (err) {\n            //\n        }\n    }\n    for (const key in exports.config) {\n        load(key);\n    }\n};\nexports.loadCache = loadCache;\n/**\n * Function to cache icons\n */\nconst storeCache = (provider, data) => {\n    if (!loaded) {\n        exports.loadCache();\n    }\n    function store(key) {\n        if (!exports.config[key]) {\n            return false;\n        }\n        const func = getGlobal(key);\n        if (!func) {\n            return false;\n        }\n        // Get item index\n        let index = exports.emptyList[key].shift();\n        if (index === void 0) {\n            // Create new index\n            index = exports.count[key];\n            if (!setCount(func, key, index + 1)) {\n                return false;\n            }\n        }\n        // Create and save item\n        try {\n            const item = {\n                cached: Math.floor(Date.now() / hour),\n                provider,\n                data,\n            };\n            func.setItem(cachePrefix + index, JSON.stringify(item));\n        }\n        catch (err) {\n            return false;\n        }\n        return true;\n    }\n    // Attempt to store at localStorage first, then at sessionStorage\n    if (!store('local')) {\n        store('session');\n    }\n};\nexports.storeCache = storeCache;\n});\n\nvar functions = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toggleBrowserCache = void 0;\n\n/**\n * Toggle cache\n */\nfunction toggleBrowserCache(storage, value) {\n    switch (storage) {\n        case 'local':\n        case 'session':\n            browserStorage.config[storage] = value;\n            break;\n        case 'all':\n            for (const key in browserStorage.config) {\n                browserStorage.config[key] = value;\n            }\n            break;\n    }\n}\nexports.toggleBrowserCache = toggleBrowserCache;\n});\n\nvar shorthand = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.alignmentFromString = exports.flipFromString = void 0;\nconst separator = /[\\s,]+/;\n/**\n * Apply \"flip\" string to icon customisations\n */\nfunction flipFromString(custom, flip) {\n    flip.split(separator).forEach((str) => {\n        const value = str.trim();\n        switch (value) {\n            case 'horizontal':\n                custom.hFlip = true;\n                break;\n            case 'vertical':\n                custom.vFlip = true;\n                break;\n        }\n    });\n}\nexports.flipFromString = flipFromString;\n/**\n * Apply \"align\" string to icon customisations\n */\nfunction alignmentFromString(custom, align) {\n    align.split(separator).forEach((str) => {\n        const value = str.trim();\n        switch (value) {\n            case 'left':\n            case 'center':\n            case 'right':\n                custom.hAlign = value;\n                break;\n            case 'top':\n            case 'middle':\n            case 'bottom':\n                custom.vAlign = value;\n                break;\n            case 'slice':\n            case 'crop':\n                custom.slice = true;\n                break;\n            case 'meet':\n                custom.slice = false;\n        }\n    });\n}\nexports.alignmentFromString = alignmentFromString;\n});\n\nvar rotate = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rotateFromString = void 0;\n/**\n * Get rotation value\n */\nfunction rotateFromString(value) {\n    const units = value.replace(/^-?[0-9.]*/, '');\n    function cleanup(value) {\n        while (value < 0) {\n            value += 4;\n        }\n        return value % 4;\n    }\n    if (units === '') {\n        const num = parseInt(value);\n        return isNaN(num) ? 0 : cleanup(num);\n    }\n    else if (units !== value) {\n        let split = 0;\n        switch (units) {\n            case '%':\n                // 25% -> 1, 50% -> 2, ...\n                split = 25;\n                break;\n            case 'deg':\n                // 90deg -> 1, 180deg -> 2, ...\n                split = 90;\n        }\n        if (split) {\n            let num = parseFloat(value.slice(0, value.length - units.length));\n            if (isNaN(num)) {\n                return 0;\n            }\n            num = num / split;\n            return num % 1 === 0 ? cleanup(num) : 0;\n        }\n    }\n    return 0;\n}\nexports.rotateFromString = rotateFromString;\n});\n\n/**\n * Default SVG attributes\n */\nconst svgDefaults = {\n    'xmlns': 'http://www.w3.org/2000/svg',\n    'xmlnsXlink': 'http://www.w3.org/1999/xlink',\n    'aria-hidden': true,\n    'role': 'img',\n    'style': {}, // Include style if it isn't set to add verticalAlign later\n};\n/**\n * Default values for customisations for inline icon\n */\nconst inlineDefaults = { ...customisations.defaults, inline: true };\n/**\n * Render icon\n */\nconst render = (\n// Icon must be validated before calling this function\nicon, \n// Partial properties\nprops, \n// True if icon should have vertical-align added\ninline, \n// Optional reference for SVG, extracted by React.forwardRef()\nref) => {\n    // Get default properties\n    const defaultProps = inline ? inlineDefaults : customisations.defaults;\n    // Get all customisations\n    const customisations$1 = customisations.mergeCustomisations(defaultProps, props);\n    // Create style\n    const style = typeof props.style === 'object' && props.style !== null\n        ? props.style\n        : {};\n    // Create SVG component properties\n    const componentProps = { ...svgDefaults, ref, style };\n    // Get element properties\n    for (let key in props) {\n        const value = props[key];\n        if (value === void 0) {\n            continue;\n        }\n        switch (key) {\n            // Properties to ignore\n            case 'icon':\n            case 'style':\n            case 'children':\n            case 'onLoad':\n            case '_ref':\n            case '_inline':\n                break;\n            // Boolean attributes\n            case 'inline':\n            case 'hFlip':\n            case 'vFlip':\n                customisations$1[key] =\n                    value === true || value === 'true' || value === 1;\n                break;\n            // Flip as string: 'horizontal,vertical'\n            case 'flip':\n                if (typeof value === 'string') {\n                    shorthand.flipFromString(customisations$1, value);\n                }\n                break;\n            // Alignment as string\n            case 'align':\n                if (typeof value === 'string') {\n                    shorthand.alignmentFromString(customisations$1, value);\n                }\n                break;\n            // Color: copy to style\n            case 'color':\n                style.color = value;\n                break;\n            // Rotation as string\n            case 'rotate':\n                if (typeof value === 'string') {\n                    customisations$1[key] = rotate.rotateFromString(value);\n                }\n                else if (typeof value === 'number') {\n                    customisations$1[key] = value;\n                }\n                break;\n            // Remove aria-hidden\n            case 'ariaHidden':\n            case 'aria-hidden':\n                if (value !== true && value !== 'true') {\n                    delete componentProps['aria-hidden'];\n                }\n                break;\n            // Copy missing property if it does not exist in customisations\n            default:\n                if (defaultProps[key] === void 0) {\n                    componentProps[key] = value;\n                }\n        }\n    }\n    // Generate icon\n    const item = build.iconToSVG(icon, customisations$1);\n    // Counter for ids based on \"id\" property to render icons consistently on server and client\n    let localCounter = 0;\n    const id$1 = props.id;\n    // Add icon stuff\n    componentProps.dangerouslySetInnerHTML = {\n        __html: id.replaceIDs(item.body, id$1 ? () => id$1 + '-' + localCounter++ : 'iconify-react-'),\n    };\n    for (let key in item.attributes) {\n        componentProps[key] = item.attributes[key];\n    }\n    if (item.inline && style.verticalAlign === void 0) {\n        style.verticalAlign = '-0.125em';\n    }\n    return React.createElement('svg', componentProps);\n};\n\n/**\n * Enable and disable browser cache\n */\nconst enableCache = (storage) => functions.toggleBrowserCache(storage, true);\nconst disableCache = (storage) => functions.toggleBrowserCache(storage, false);\n/* Storage functions */\n/**\n * Check if icon exists\n */\nconst iconExists = functions$3.storageFunctions.iconExists;\n/**\n * Get icon data\n */\nconst getIcon = functions$3.storageFunctions.getIcon;\n/**\n * List available icons\n */\nconst listIcons = functions$3.storageFunctions.listIcons;\n/**\n * Add one icon\n */\nconst addIcon = functions$3.storageFunctions.addIcon;\n/**\n * Add icon set\n */\nconst addCollection = functions$3.storageFunctions.addCollection;\n/* Builder functions */\n/**\n * Calculate icon size\n */\nconst calculateSize = functions$2.builderFunctions.calculateSize;\n/**\n * Replace unique ids in content\n */\nconst replaceIDs = functions$2.builderFunctions.replaceIDs;\n/**\n * Build SVG\n */\nconst buildIcon = functions$2.builderFunctions.buildIcon;\n/* API functions */\n/**\n * Load icons\n */\nconst loadIcons = functions$1.APIFunctions.loadIcons;\n/**\n * Add API provider\n */\nconst addAPIProvider = functions$1.APIFunctions.addAPIProvider;\n/**\n * Export internal functions that can be used by third party implementations\n */\nconst _api = functions$1.APIInternalFunctions;\n/**\n * Initialise stuff\n */\n// Enable short names\nfunctions$3.allowSimpleNames(true);\n// Set API\nmodules$1.coreModules.api = api.API;\n// Use Fetch API by default\nlet getAPIModule = fetch_1.getAPIModule;\ntry {\n    if (typeof document !== 'undefined' && typeof window !== 'undefined') {\n        // If window and document exist, attempt to load whatever module is available, otherwise use Fetch API\n        getAPIModule =\n            typeof fetch === 'function' && typeof Promise === 'function'\n                ? fetch_1.getAPIModule\n                : jsonp.getAPIModule;\n    }\n}\ncatch (err) {\n    //\n}\nmodules.setAPIModule('', getAPIModule(config.getAPIConfig));\n/**\n * Function to enable node-fetch for getting icons on server side\n */\n_api.setFetch = (nodeFetch) => {\n    fetch_1.setFetch(nodeFetch);\n    if (getAPIModule !== fetch_1.getAPIModule) {\n        getAPIModule = fetch_1.getAPIModule;\n        modules.setAPIModule('', getAPIModule(config.getAPIConfig));\n    }\n};\n/**\n * Browser stuff\n */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    // Set cache and load existing cache\n    modules$1.coreModules.cache = browserStorage.storeCache;\n    browserStorage.loadCache();\n    const _window = window;\n    // Load icons from global \"IconifyPreload\"\n    if (_window.IconifyPreload !== void 0) {\n        const preload = _window.IconifyPreload;\n        const err = 'Invalid IconifyPreload syntax.';\n        if (typeof preload === 'object' && preload !== null) {\n            (preload instanceof Array ? preload : [preload]).forEach((item) => {\n                try {\n                    if (\n                    // Check if item is an object and not null/array\n                    typeof item !== 'object' ||\n                        item === null ||\n                        item instanceof Array ||\n                        // Check for 'icons' and 'prefix'\n                        typeof item.icons !== 'object' ||\n                        typeof item.prefix !== 'string' ||\n                        // Add icon set\n                        !addCollection(item)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            });\n        }\n    }\n    // Set API from global \"IconifyProviders\"\n    if (_window.IconifyProviders !== void 0) {\n        const providers = _window.IconifyProviders;\n        if (typeof providers === 'object' && providers !== null) {\n            for (let key in providers) {\n                const err = 'IconifyProviders[' + key + '] is invalid.';\n                try {\n                    const value = providers[key];\n                    if (typeof value !== 'object' ||\n                        !value ||\n                        value.resources === void 0) {\n                        continue;\n                    }\n                    if (!config.setAPIConfig(key, value)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            }\n        }\n    }\n}\nclass IconComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // Render placeholder before component is mounted\n            icon: null,\n        };\n    }\n    /**\n     * Abort loading icon\n     */\n    _abortLoading() {\n        if (this._loading) {\n            this._loading.abort();\n            this._loading = null;\n        }\n    }\n    /**\n     * Update state\n     */\n    _setData(icon) {\n        if (this.state.icon !== icon) {\n            this.setState({\n                icon,\n            });\n        }\n    }\n    /**\n     * Check if icon should be loaded\n     */\n    _checkIcon(changed) {\n        const state = this.state;\n        const icon$1 = this.props.icon;\n        // Icon is an object\n        if (typeof icon$1 === 'object' &&\n            icon$1 !== null &&\n            typeof icon$1.body === 'string') {\n            // Stop loading\n            this._icon = '';\n            this._abortLoading();\n            if (changed || state.icon === null) {\n                // Set data if it was changed\n                this._setData({\n                    data: icon.fullIcon(icon$1),\n                });\n            }\n            return;\n        }\n        // Invalid icon?\n        let iconName;\n        if (typeof icon$1 !== 'string' ||\n            (iconName = name.stringToIcon(icon$1, false, true)) === null) {\n            this._abortLoading();\n            this._setData(null);\n            return;\n        }\n        // Load icon\n        const data = functions$3.getIconData(iconName);\n        if (data === null) {\n            // Icon needs to be loaded\n            if (!this._loading || this._loading.name !== icon$1) {\n                // New icon to load\n                this._abortLoading();\n                this._icon = '';\n                this._setData(null);\n                this._loading = {\n                    name: icon$1,\n                    abort: api.API.loadIcons([iconName], this._checkIcon.bind(this, false)),\n                };\n            }\n            return;\n        }\n        // Icon data is available\n        if (this._icon !== icon$1 || state.icon === null) {\n            // New icon or icon has been loaded\n            this._abortLoading();\n            this._icon = icon$1;\n            // Add classes\n            const classes = ['iconify'];\n            if (iconName.prefix !== '') {\n                classes.push('iconify--' + iconName.prefix);\n            }\n            if (iconName.provider !== '') {\n                classes.push('iconify--' + iconName.provider);\n            }\n            // Set data\n            this._setData({\n                data,\n                classes,\n            });\n            if (this.props.onLoad) {\n                this.props.onLoad(icon$1);\n            }\n        }\n    }\n    /**\n     * Component mounted\n     */\n    componentDidMount() {\n        this._checkIcon(false);\n    }\n    /**\n     * Component updated\n     */\n    componentDidUpdate(oldProps) {\n        if (oldProps.icon !== this.props.icon) {\n            this._checkIcon(true);\n        }\n    }\n    /**\n     * Abort loading\n     */\n    componentWillUnmount() {\n        this._abortLoading();\n    }\n    /**\n     * Render\n     */\n    render() {\n        const props = this.props;\n        const icon = this.state.icon;\n        if (icon === null) {\n            // Render placeholder\n            return props.children\n                ? props.children\n                : React.createElement('span', {});\n        }\n        // Add classes\n        let newProps = props;\n        if (icon.classes) {\n            newProps = {\n                ...props,\n                className: (typeof props.className === 'string'\n                    ? props.className + ' '\n                    : '') + icon.classes.join(' '),\n            };\n        }\n        // Render icon\n        return render(icon.data, newProps, props._inline, props._ref);\n    }\n}\n/**\n * Block icon\n *\n * @param props - Component properties\n */\nconst Icon = React.forwardRef(function Icon(props, ref) {\n    const newProps = {\n        ...props,\n        _ref: ref,\n        _inline: false,\n    };\n    return React.createElement(IconComponent, newProps);\n});\n/**\n * Inline icon (has negative verticalAlign that makes it behave like icon font)\n *\n * @param props - Component properties\n */\nconst InlineIcon = React.forwardRef(function InlineIcon(props, ref) {\n    const newProps = { ...props, _ref: ref, _inline: true };\n    return React.createElement(IconComponent, newProps);\n});\n\nexport { Icon, InlineIcon, _api, addAPIProvider, addCollection, addIcon, buildIcon, calculateSize, disableCache, enableCache, getIcon, iconExists, listIcons, loadIcons, replaceIDs };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}