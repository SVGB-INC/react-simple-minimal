{"ast":null,"code":"var _jsxFileName = \"D:\\\\Softwares\\\\react-simple-minimal\\\\src\\\\components\\\\ThemePrimaryColor.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useMemo } from 'react'; // material\n\nimport { alpha, ThemeProvider, createTheme, useTheme } from '@mui/material/styles'; // hooks\n\nimport useSettings from '../hooks/useSettings'; //\n\nimport componentsOverride from '../theme/overrides'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nThemePrimaryColor.propTypes = {\n  children: PropTypes.node\n};\nexport default function ThemePrimaryColor({\n  children\n}) {\n  _s();\n\n  const defaultTheme = useTheme();\n  const {\n    setColor\n  } = useSettings();\n  const themeOptions = useMemo(() => ({ ...defaultTheme,\n    palette: { ...defaultTheme.palette,\n      primary: setColor\n    },\n    customShadows: { ...defaultTheme.customShadows,\n      primary: `0 8px 16px 0 ${alpha(setColor.main, 0.24)}`\n    }\n  }), [setColor, defaultTheme]);\n  const theme = createTheme(themeOptions);\n  theme.components = componentsOverride(theme);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ThemePrimaryColor, \"eN0L9P883A9BdvIkyGgGk7BmTdY=\", false, function () {\n  return [useTheme, useSettings];\n});\n\n_c = ThemePrimaryColor;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemePrimaryColor\");","map":{"version":3,"names":["PropTypes","useMemo","alpha","ThemeProvider","createTheme","useTheme","useSettings","componentsOverride","ThemePrimaryColor","propTypes","children","node","defaultTheme","setColor","themeOptions","palette","primary","customShadows","main","theme","components"],"sources":["D:/Softwares/react-simple-minimal/src/components/ThemePrimaryColor.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useMemo } from 'react';\n// material\nimport { alpha, ThemeProvider, createTheme, useTheme } from '@mui/material/styles';\n// hooks\nimport useSettings from '../hooks/useSettings';\n//\nimport componentsOverride from '../theme/overrides';\n\n// ----------------------------------------------------------------------\n\nThemePrimaryColor.propTypes = {\n  children: PropTypes.node\n};\n\nexport default function ThemePrimaryColor({ children }) {\n  const defaultTheme = useTheme();\n  const { setColor } = useSettings();\n\n  const themeOptions = useMemo(\n    () => ({\n      ...defaultTheme,\n      palette: {\n        ...defaultTheme.palette,\n        primary: setColor\n      },\n      customShadows: {\n        ...defaultTheme.customShadows,\n        primary: `0 8px 16px 0 ${alpha(setColor.main, 0.24)}`\n      }\n    }),\n    [setColor, defaultTheme]\n  );\n\n  const theme = createTheme(themeOptions);\n  theme.components = componentsOverride(theme);\n\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n}\n"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,OAAxB,C,CACA;;AACA,SAASC,KAAT,EAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,QAA5C,QAA4D,sBAA5D,C,CACA;;AACA,OAAOC,WAAP,MAAwB,sBAAxB,C,CACA;;AACA,OAAOC,kBAAP,MAA+B,oBAA/B,C,CAEA;;;AAEAC,iBAAiB,CAACC,SAAlB,GAA8B;EAC5BC,QAAQ,EAAEV,SAAS,CAACW;AADQ,CAA9B;AAIA,eAAe,SAASH,iBAAT,CAA2B;EAAEE;AAAF,CAA3B,EAAyC;EAAA;;EACtD,MAAME,YAAY,GAAGP,QAAQ,EAA7B;EACA,MAAM;IAAEQ;EAAF,IAAeP,WAAW,EAAhC;EAEA,MAAMQ,YAAY,GAAGb,OAAO,CAC1B,OAAO,EACL,GAAGW,YADE;IAELG,OAAO,EAAE,EACP,GAAGH,YAAY,CAACG,OADT;MAEPC,OAAO,EAAEH;IAFF,CAFJ;IAMLI,aAAa,EAAE,EACb,GAAGL,YAAY,CAACK,aADH;MAEbD,OAAO,EAAG,gBAAed,KAAK,CAACW,QAAQ,CAACK,IAAV,EAAgB,IAAhB,CAAsB;IAFvC;EANV,CAAP,CAD0B,EAY1B,CAACL,QAAD,EAAWD,YAAX,CAZ0B,CAA5B;EAeA,MAAMO,KAAK,GAAGf,WAAW,CAACU,YAAD,CAAzB;EACAK,KAAK,CAACC,UAAN,GAAmBb,kBAAkB,CAACY,KAAD,CAArC;EAEA,oBAAO,QAAC,aAAD;IAAe,KAAK,EAAEA,KAAtB;IAAA,UAA8BT;EAA9B;IAAA;IAAA;IAAA;EAAA,QAAP;AACD;;GAvBuBF,iB;UACDH,Q,EACAC,W;;;KAFCE,iB"},"metadata":{},"sourceType":"module"}