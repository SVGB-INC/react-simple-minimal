{"ast":null,"code":"var _jsxFileName = \"D:\\\\Softwares\\\\react-simple-minimal\\\\src\\\\components\\\\@material-extend\\\\MBreadcrumbs.js\";\nimport { last } from 'lodash';\nimport PropTypes from 'prop-types'; // material\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Typography, Box, Link, Breadcrumbs } from '@mui/material'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Separator = /*#__PURE__*/_jsxDEV(Box, {\n  component: \"span\",\n  sx: {\n    width: 4,\n    height: 4,\n    borderRadius: '50%',\n    bgcolor: 'text.disabled'\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 19\n}, this);\n\nLinkItem.propTypes = {\n  link: PropTypes.object\n};\n\nfunction LinkItem({\n  link\n}) {\n  const {\n    href,\n    name,\n    icon\n  } = link;\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: href,\n    variant: \"body2\",\n    component: RouterLink,\n    sx: {\n      lineHeight: 2,\n      display: 'flex',\n      alignItems: 'center',\n      color: 'text.primary',\n      '& > div': {\n        display: 'inherit'\n      }\n    },\n    children: [icon && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mr: 1,\n        '& svg': {\n          width: 20,\n          height: 20\n        }\n      },\n      children: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), name]\n  }, name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_c = LinkItem;\nMBreadcrumbs.propTypes = {\n  links: PropTypes.array.isRequired,\n  activeLast: PropTypes.bool\n};\nexport default function MBreadcrumbs({\n  links,\n  activeLast = false,\n  ...other\n}) {\n  const currentLink = last(links).name;\n  const listDefault = links.map(link => /*#__PURE__*/_jsxDEV(LinkItem, {\n    link: link\n  }, link.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 43\n  }, this));\n  const listActiveLast = links.map(link => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: link.name !== currentLink ? /*#__PURE__*/_jsxDEV(LinkItem, {\n      link: link\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      sx: {\n        maxWidth: 260,\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        color: 'text.disabled',\n        textOverflow: 'ellipsis'\n      },\n      children: currentLink\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, link.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n    separator: Separator,\n    ...other,\n    children: activeLast ? listDefault : listActiveLast\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_c2 = MBreadcrumbs;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LinkItem\");\n$RefreshReg$(_c2, \"MBreadcrumbs\");","map":{"version":3,"names":["last","PropTypes","Link","RouterLink","Typography","Box","Breadcrumbs","Separator","width","height","borderRadius","bgcolor","LinkItem","propTypes","link","object","href","name","icon","lineHeight","display","alignItems","color","mr","MBreadcrumbs","links","array","isRequired","activeLast","bool","other","currentLink","listDefault","map","listActiveLast","maxWidth","overflow","whiteSpace","textOverflow"],"sources":["D:/Softwares/react-simple-minimal/src/components/@material-extend/MBreadcrumbs.js"],"sourcesContent":["import { last } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Typography, Box, Link, Breadcrumbs } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst Separator = <Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />;\n\nLinkItem.propTypes = {\n  link: PropTypes.object\n};\n\nfunction LinkItem({ link }) {\n  const { href, name, icon } = link;\n  return (\n    <Link\n      to={href}\n      key={name}\n      variant=\"body2\"\n      component={RouterLink}\n      sx={{\n        lineHeight: 2,\n        display: 'flex',\n        alignItems: 'center',\n        color: 'text.primary',\n        '& > div': { display: 'inherit' }\n      }}\n    >\n      {icon && (\n        <Box\n          sx={{\n            mr: 1,\n            '& svg': { width: 20, height: 20 }\n          }}\n        >\n          {icon}\n        </Box>\n      )}\n      {name}\n    </Link>\n  );\n}\n\nMBreadcrumbs.propTypes = {\n  links: PropTypes.array.isRequired,\n  activeLast: PropTypes.bool\n};\n\nexport default function MBreadcrumbs({ links, activeLast = false, ...other }) {\n  const currentLink = last(links).name;\n\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\n  const listActiveLast = links.map((link) => (\n    <div key={link.name}>\n      {link.name !== currentLink ? (\n        <LinkItem link={link} />\n      ) : (\n        <Typography\n          variant=\"body2\"\n          sx={{\n            maxWidth: 260,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            color: 'text.disabled',\n            textOverflow: 'ellipsis'\n          }}\n        >\n          {currentLink}\n        </Typography>\n      )}\n    </div>\n  ));\n\n  return (\n    <Breadcrumbs separator={Separator} {...other}>\n      {activeLast ? listDefault : listActiveLast}\n    </Breadcrumbs>\n  );\n}\n"],"mappings":";AAAA,SAASA,IAAT,QAAqB,QAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAASC,IAAI,IAAIC,UAAjB,QAAmC,kBAAnC;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BH,IAA1B,EAAgCI,WAAhC,QAAmD,eAAnD,C,CAEA;;;;AAEA,MAAMC,SAAS,gBAAG,QAAC,GAAD;EAAK,SAAS,EAAC,MAAf;EAAsB,EAAE,EAAE;IAAEC,KAAK,EAAE,CAAT;IAAYC,MAAM,EAAE,CAApB;IAAuBC,YAAY,EAAE,KAArC;IAA4CC,OAAO,EAAE;EAArD;AAA1B;EAAA;EAAA;EAAA;AAAA,QAAlB;;AAEAC,QAAQ,CAACC,SAAT,GAAqB;EACnBC,IAAI,EAAEb,SAAS,CAACc;AADG,CAArB;;AAIA,SAASH,QAAT,CAAkB;EAAEE;AAAF,CAAlB,EAA4B;EAC1B,MAAM;IAAEE,IAAF;IAAQC,IAAR;IAAcC;EAAd,IAAuBJ,IAA7B;EACA,oBACE,QAAC,IAAD;IACE,EAAE,EAAEE,IADN;IAGE,OAAO,EAAC,OAHV;IAIE,SAAS,EAAEb,UAJb;IAKE,EAAE,EAAE;MACFgB,UAAU,EAAE,CADV;MAEFC,OAAO,EAAE,MAFP;MAGFC,UAAU,EAAE,QAHV;MAIFC,KAAK,EAAE,cAJL;MAKF,WAAW;QAAEF,OAAO,EAAE;MAAX;IALT,CALN;IAAA,WAaGF,IAAI,iBACH,QAAC,GAAD;MACE,EAAE,EAAE;QACFK,EAAE,EAAE,CADF;QAEF,SAAS;UAAEf,KAAK,EAAE,EAAT;UAAaC,MAAM,EAAE;QAArB;MAFP,CADN;MAAA,UAMGS;IANH;MAAA;MAAA;MAAA;IAAA,QAdJ,EAuBGD,IAvBH;EAAA,GAEOA,IAFP;IAAA;IAAA;IAAA;EAAA,QADF;AA2BD;;KA7BQL,Q;AA+BTY,YAAY,CAACX,SAAb,GAAyB;EACvBY,KAAK,EAAExB,SAAS,CAACyB,KAAV,CAAgBC,UADA;EAEvBC,UAAU,EAAE3B,SAAS,CAAC4B;AAFC,CAAzB;AAKA,eAAe,SAASL,YAAT,CAAsB;EAAEC,KAAF;EAASG,UAAU,GAAG,KAAtB;EAA6B,GAAGE;AAAhC,CAAtB,EAA+D;EAC5E,MAAMC,WAAW,GAAG/B,IAAI,CAACyB,KAAD,CAAJ,CAAYR,IAAhC;EAEA,MAAMe,WAAW,GAAGP,KAAK,CAACQ,GAAN,CAAWnB,IAAD,iBAAU,QAAC,QAAD;IAA0B,IAAI,EAAEA;EAAhC,GAAeA,IAAI,CAACG,IAApB;IAAA;IAAA;IAAA;EAAA,QAApB,CAApB;EACA,MAAMiB,cAAc,GAAGT,KAAK,CAACQ,GAAN,CAAWnB,IAAD,iBAC/B;IAAA,UACGA,IAAI,CAACG,IAAL,KAAcc,WAAd,gBACC,QAAC,QAAD;MAAU,IAAI,EAAEjB;IAAhB;MAAA;MAAA;MAAA;IAAA,QADD,gBAGC,QAAC,UAAD;MACE,OAAO,EAAC,OADV;MAEE,EAAE,EAAE;QACFqB,QAAQ,EAAE,GADR;QAEFC,QAAQ,EAAE,QAFR;QAGFC,UAAU,EAAE,QAHV;QAIFf,KAAK,EAAE,eAJL;QAKFgB,YAAY,EAAE;MALZ,CAFN;MAAA,UAUGP;IAVH;MAAA;MAAA;MAAA;IAAA;EAJJ,GAAUjB,IAAI,CAACG,IAAf;IAAA;IAAA;IAAA;EAAA,QADqB,CAAvB;EAqBA,oBACE,QAAC,WAAD;IAAa,SAAS,EAAEV,SAAxB;IAAA,GAAuCuB,KAAvC;IAAA,UACGF,UAAU,GAAGI,WAAH,GAAiBE;EAD9B;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;MA9BuBV,Y"},"metadata":{},"sourceType":"module"}