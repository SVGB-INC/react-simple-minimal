{"ast":null,"code":"var _jsxFileName = \"D:\\\\Softwares\\\\react-simple-minimal\\\\src\\\\theme\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useMemo } from 'react'; // material\n\nimport { CssBaseline } from '@mui/material';\nimport { createTheme, ThemeProvider, StyledEngineProvider } from '@mui/material/styles'; // hooks\n\nimport useSettings from '../hooks/useSettings'; //\n\nimport shape from './shape';\nimport palette from './palette';\nimport typography from './typography';\nimport breakpoints from './breakpoints';\nimport componentsOverride from './overrides';\nimport shadows, { customShadows } from './shadows'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nThemeConfig.propTypes = {\n  children: PropTypes.node\n};\nexport default function ThemeConfig({\n  children\n}) {\n  _s();\n\n  const {\n    themeMode,\n    themeDirection\n  } = useSettings();\n  const isLight = themeMode === 'light';\n  const themeOptions = useMemo(() => ({\n    palette: isLight ? { ...palette.light,\n      mode: 'light'\n    } : { ...palette.dark,\n      mode: 'dark'\n    },\n    shape,\n    typography,\n    breakpoints,\n    direction: themeDirection,\n    shadows: isLight ? shadows.light : shadows.dark,\n    customShadows: isLight ? customShadows.light : customShadows.dark\n  }), [isLight, themeDirection]);\n  const theme = createTheme(themeOptions);\n  theme.components = componentsOverride(theme);\n  return /*#__PURE__*/_jsxDEV(StyledEngineProvider, {\n    injectFirst: true,\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ThemeConfig, \"6nZh1XQ90QqSioSuvGOixUZfSik=\", false, function () {\n  return [useSettings];\n});\n\n_c = ThemeConfig;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeConfig\");","map":{"version":3,"names":["PropTypes","useMemo","CssBaseline","createTheme","ThemeProvider","StyledEngineProvider","useSettings","shape","palette","typography","breakpoints","componentsOverride","shadows","customShadows","ThemeConfig","propTypes","children","node","themeMode","themeDirection","isLight","themeOptions","light","mode","dark","direction","theme","components"],"sources":["D:/Softwares/react-simple-minimal/src/theme/index.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useMemo } from 'react';\n// material\nimport { CssBaseline } from '@mui/material';\nimport { createTheme, ThemeProvider, StyledEngineProvider } from '@mui/material/styles';\n// hooks\nimport useSettings from '../hooks/useSettings';\n//\nimport shape from './shape';\nimport palette from './palette';\nimport typography from './typography';\nimport breakpoints from './breakpoints';\nimport componentsOverride from './overrides';\nimport shadows, { customShadows } from './shadows';\n\n// ----------------------------------------------------------------------\n\nThemeConfig.propTypes = {\n  children: PropTypes.node\n};\n\nexport default function ThemeConfig({ children }) {\n  const { themeMode, themeDirection } = useSettings();\n  const isLight = themeMode === 'light';\n\n  const themeOptions = useMemo(\n    () => ({\n      palette: isLight ? { ...palette.light, mode: 'light' } : { ...palette.dark, mode: 'dark' },\n      shape,\n      typography,\n      breakpoints,\n      direction: themeDirection,\n      shadows: isLight ? shadows.light : shadows.dark,\n      customShadows: isLight ? customShadows.light : customShadows.dark\n    }),\n    [isLight, themeDirection]\n  );\n\n  const theme = createTheme(themeOptions);\n  theme.components = componentsOverride(theme);\n\n  return (\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        {children}\n      </ThemeProvider>\n    </StyledEngineProvider>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,OAAxB,C,CACA;;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,oBAArC,QAAiE,sBAAjE,C,CACA;;AACA,OAAOC,WAAP,MAAwB,sBAAxB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,kBAAP,MAA+B,aAA/B;AACA,OAAOC,OAAP,IAAkBC,aAAlB,QAAuC,WAAvC,C,CAEA;;;AAEAC,WAAW,CAACC,SAAZ,GAAwB;EACtBC,QAAQ,EAAEhB,SAAS,CAACiB;AADE,CAAxB;AAIA,eAAe,SAASH,WAAT,CAAqB;EAAEE;AAAF,CAArB,EAAmC;EAAA;;EAChD,MAAM;IAAEE,SAAF;IAAaC;EAAb,IAAgCb,WAAW,EAAjD;EACA,MAAMc,OAAO,GAAGF,SAAS,KAAK,OAA9B;EAEA,MAAMG,YAAY,GAAGpB,OAAO,CAC1B,OAAO;IACLO,OAAO,EAAEY,OAAO,GAAG,EAAE,GAAGZ,OAAO,CAACc,KAAb;MAAoBC,IAAI,EAAE;IAA1B,CAAH,GAAyC,EAAE,GAAGf,OAAO,CAACgB,IAAb;MAAmBD,IAAI,EAAE;IAAzB,CADpD;IAELhB,KAFK;IAGLE,UAHK;IAILC,WAJK;IAKLe,SAAS,EAAEN,cALN;IAMLP,OAAO,EAAEQ,OAAO,GAAGR,OAAO,CAACU,KAAX,GAAmBV,OAAO,CAACY,IANtC;IAOLX,aAAa,EAAEO,OAAO,GAAGP,aAAa,CAACS,KAAjB,GAAyBT,aAAa,CAACW;EAPxD,CAAP,CAD0B,EAU1B,CAACJ,OAAD,EAAUD,cAAV,CAV0B,CAA5B;EAaA,MAAMO,KAAK,GAAGvB,WAAW,CAACkB,YAAD,CAAzB;EACAK,KAAK,CAACC,UAAN,GAAmBhB,kBAAkB,CAACe,KAAD,CAArC;EAEA,oBACE,QAAC,oBAAD;IAAsB,WAAW,MAAjC;IAAA,uBACE,QAAC,aAAD;MAAe,KAAK,EAAEA,KAAtB;MAAA,wBACE,QAAC,WAAD;QAAA;QAAA;QAAA;MAAA,QADF,EAEGV,QAFH;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;GA5BuBF,W;UACgBR,W;;;KADhBQ,W"},"metadata":{},"sourceType":"module"}